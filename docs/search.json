[{"path":"https://bpollner.github.io/flowdex/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GPL >= 3 License + file LICENSE","title":"GPL >= 3 License + file LICENSE","text":"Contents file LICENSE","code":""},{"path":"https://bpollner.github.io/flowdex/LICENSE.html","id":"gnu-general-public-license","dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"GPL >= 3 License + file LICENSE","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed. GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow. Definitions. “License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion. Source Code. “source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work. Basic Permissions. rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary. Protecting Users’ Legal Rights Anti-Circumvention Law. covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures. Conveying Verbatim Copies. may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee. Conveying Modified Source Versions. may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate. Conveying Non-Source Forms. may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying. Additional Terms. “Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way. Termination. may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10. Acceptance Required Copies. required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License . Automatic Licensing Downstream Recipients. time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion . Patents. “contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law. Surrender Others’ Freedom. conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program. Use GNU Affero General Public License. Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination . Revised Versions License. Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version. Disclaimer Warranty. WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. Limitation Liability. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. Interpretation Sections 15 16. disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w' andshow c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see https://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read https://www.gnu.org/licenses/--lgpl.html.","code":"Preamble TERMS AND CONDITIONS a) The work must carry prominent notices stating that you modified it, and giving a relevant date.  b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7.  This requirement modifies the requirement in section 4 to \"keep intact all notices\".  c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy.  This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged.  This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it.  d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange.  b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge.  c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source.  This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b.  d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge.  You need not require recipients to copy the Corresponding Source along with the object code.  If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source.  Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements.  e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or  b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or  c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or  d) Limiting the use for publicity purposes of names of licensors or authors of the material; or  e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or  f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. END OF TERMS AND CONDITIONS          How to Apply These Terms to Your New Programs <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details."},{"path":"https://bpollner.github.io/flowdex/LICENSE.html","id":"contents-of-file-license","dir":"","previous_headings":"","what":"Contents of file LICENSE","title":"GPL >= 3 License + file LICENSE","text":"YEAR: 2022 COPYRIGHT HOLDER: Bernhard Pollner conditions terms GPL >= 3 license appended modified follows: Permitted Purpose: sole permitted purpose software “flowdex” academic research Restrictions: Non-academic commercial use, including, limited development derivative works commercial purposes including consulting permitted license. Additional Restrictions: Derivative works must free, open source, non-commercial, academic, research . Commercial internal business use permitted. (items taken “Exhibit ” license package “flowWorkspace”.)","code":""},{"path":"https://bpollner.github.io/flowdex/articles/accessory.html","id":"check-and-repair-fcs-files","dir":"Articles","previous_headings":"","what":"Check and Repair fcs Files","title":"Repair & Accessory Functions","text":"also happened author, sometimes FCM-machine seems written kind ‘faulty’ fcs file, resulting error message trying add gate previously read fcs files.Reading fcs files via flowCore::read.FCS() problem – least authors case. testing concluded reason error appears lie multiplication keywords afflicted fcs files. Thus, function checkRepairFcsFiles() written remove one multiplied keywords. checkRepairFcsFiles() automatically executed whenever fcs files read . However, default repair afflicted fcs files, merely list possibly erroneous files stop. desired, checkRepairFcsFiles() can called manually order options: Multiple keywords can viewed, can selected one multiples keyword keep. purpose demonstration, fcs files provoking error described included tutorial dataset. First, copy faulty fcs files folder experiment-home directory: Now check: see two files multiplied keywords. Repair calling Please refer checkRepairFcsFiles() information view multiplied keywords select one multiple keep.","code":"The HEADER and the TEXT segment define different starting point ... to read the data destination <- \"~/desktop\" from <- list.files(paste0(destination, \"/flowdexTutorial/fcsF_E_rep\"), full.names=TRUE) to <- paste0(destination, \"/tapWater@home/fcsF_E_rep\") dir.create(to) file.copy(from, to, overwrite=TRUE) checkRepairFcsFiles(fn=\"fcsF_E_rep\") checkRepairFcsFiles(fn=\"fcsF_E_rep\", fcsRepair = TRUE, confirm = FALSE) # check again, all should be good now: checkRepairFcsFiles(fn=\"fcsF_E_rep\")"},{"path":"https://bpollner.github.io/flowdex/articles/accessory.html","id":"repair-sample-id-and-volume-data","dir":"Articles","previous_headings":"","what":"Repair Sample ID and Volume Data","title":"Repair & Accessory Functions","text":"case happened volumetric measurement single sample succeed, erroneous sample-ID string provided sample-ID field single sample time data acquisition, two functions remedy issues: repairVolumes() repairSID().","code":""},{"path":"https://bpollner.github.io/flowdex/articles/accessory.html","id":"repair-volumes","dir":"Articles","previous_headings":"Repair Sample ID and Volume Data","what":"Repair Volumes","title":"Repair & Accessory Functions","text":"First, copy (manipulated) fcs files folder experiment-home directory: order repair missing volume data, call want force fcs files folder volume data, can set argument includeAll TRUE:","code":"destination <- \"~/desktop\" from <- list.files(paste0(destination, \"/flowdexTutorial/fcsF_E_vol_sid\"), full.names=TRUE) to <- paste0(destination, \"/tapWater@home/fcsF_E_vol_sid\") dir.create(to) file.copy(from, to, overwrite=TRUE) repairVolumes(fn = \"fcsF_E_vol_sid\", vol=1234567) # press enter to confirm # and check again: repairVolumes(fn = \"fcsF_E_vol_sid\", vol=1234567) # all should be good file.copy(from, to, overwrite=TRUE) # restore the \"bad\" files repairVolumes(fn = \"fcsF_E_vol_sid\", vol=1234567, confirm=FALSE) # to run it without having to confirm repairVolumes(fn = \"fcsF_E_vol_sid\", vol=1010101, confirm=FALSE, includeAll = TRUE)"},{"path":"https://bpollner.github.io/flowdex/articles/accessory.html","id":"repair-sample-id","dir":"Articles","previous_headings":"Repair Sample ID and Volume Data","what":"Repair Sample ID","title":"Repair & Accessory Functions","text":"Assuming repaired volume data described , can use fcs files folder ‘fcsF_E_vol_sid’ demonstrate repair faulty sample ID. likely sometimes (e.g. long nights data acquisition FCM-machine occupied driven long hours dark…) erroneous sample ID character provided sample ID field individual sample time data acquisition (see structured ID string).repairSID() can used repair faulty sample IDs. best case, faulty sample ID comes attention translation element names via dictionary work. worst case, element value wrong. comes attention e.g. cross-referencing sample names cyTags / sample IDs pData slot ‘fdmat’ object (produced e.g. flowdexit() — descriptive sample names… repair faulty sample ID single fcs file, first read (; use argument patt) fcs files folder; come back flowCore::flowSet(). ‘flowSet’ given function repairSID(), now sample name new sample ID can specified:","code":"flowset <- repairSID(fn = \"fcsF_E_vol_sid\") flowset@phenoData@data # very bad sample ID in the fourth sample # view the correct sample IDs of the other samples # copy one of those correct sample IDs # paste and modify it - it should be beaker #3: nsid <- \"tr: GPos; Td: 5; wt: nativ; ap: no; th: th1; ha: ha1; bk: b3\" # also copy and paste the sample name sana <- \"N_na_GPos_T5_th1_b3.fcs\" # the  name of the sample having the faulty sample ID # now put all together and write fcs file with correct sample ID back to disk repairSID(fs=flowset, fn=\"fcsF_E_vol_sid\", name=sana, newSID = nsid) # press enter to confirm # # and check again: flowset <- repairSID(fn = \"fcsF_E_vol_sid\") flowset@phenoData@data # all is good"},{"path":"https://bpollner.github.io/flowdex/articles/accessory.html","id":"apply-bandpass-filter","dir":"Articles","previous_headings":"","what":"Apply Bandpass Filter","title":"Repair & Accessory Functions","text":"Function applyBandpass() exactly says – applies bandpass-like filter fluorescence intensities stemming single gate. already done , create ‘fdmat’ object containing small subset data: see much signal fluorescence intensity 1600 2400. Lets apply bandpass filter ‘fdmat’ object fluorescence intensities 1600 2400 remain: Also number overall events per volume unit updated - observe compare number legend next plot one . Visualize difference using plotFlscDist(): Finally, rawdata applied bandpass filter can exported via","code":"fdmat_s <- flowdexit(patt = \"T4_th1\") plotFlscDist(fdmat_s, toPdf = FALSE) fdmat_s_bp <- applyBandpass(fdmat_s, bandpass = c(1600, 2400)) fdmat_s[[1]] # compare fdmat_s_bp[[1]] #  ncol(fdmat_s[[1]]) ncol(fdmat_s_bp[[1]]) plotFlscDist(fdmat_s_bp, toPdf = FALSE) exportFdmatData(fdmat_s_bp, expo.name = \"flscData_d4_th1\")"},{"path":"https://bpollner.github.io/flowdex/articles/acquire-data.html","id":"simulate-data-acquisition","dir":"Articles","previous_headings":"","what":"Simulate Data Acquisition","title":"Acquire Data","text":"Simulate data acquisition now manually copying files ‘flowdexTutorial/fcsFiles’ ‘tapWater\\@home/fcsFiles’, call","code":"from <- list.files(paste0(destination, \"/flowdexTutorial/fcsFiles\"), full.names = TRUE) to <- paste0(destination, \"/tapWater@home/fcsFiles\") file.copy(from, to)"},{"path":"https://bpollner.github.io/flowdex/articles/acquire-data.html","id":"using-structured-id-string-and-dictionary","dir":"Articles","previous_headings":"","what":"Using Structured ID String and Dictionary","title":"Acquire Data","text":"desired, possible generate class- numerical variables describing sample resp. dataset providing structured character string Sample-ID field sample GUI FCM-machine time data acquisition. character string later expanded using dictionary (located ‘tapWater@home/dictionary’) expand abbreviations long names.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/acquire-data.html","id":"using-the-structured-id-string","dir":"Articles","previous_headings":"Using Structured ID String and Dictionary","what":"Using the Structured ID String","title":"Acquire Data","text":"assigning structured character string sample done time data acquisition GUI FCM-machine, ´d like explain process showing describing used case tutorial data. Lets consider example sample named ‘N_na_GPos_T4_th1_b3.fcs’.: sample experiment-group (‘GPos’), day 4 (‘T4’), first third beakers (‘th1’), beaker number 3 (‘b3’). structured character string now contains elements groups, separated dedicated single character. default value separating groups ; separating elements :. can many groups desired. single group consists exactly two elements: key value, separated per default : . sample , input sample-ID field GUI FCM-machine time data acquisition now : , 7 groups: tr, Td, wt, ap, th, ha bk, separated ;. ‘tr’ e.g. expanded ‘C_treatment’ defined dictionary. ‘GPos’ value first group, meaning sample belongs experiment group (denoted ‘GPos’). next group ‘Td: 4’ means treatment time sample 4 days, . first part element always short name, abbreviation gets expanded long name using dictionary. second part element actual value. first part can thought column name spreadsheet, second part actual value within column. order groups relevant, can different order different samples (confusing data acquisition, recommended). erroneous sample ID provided, can repaired later using function repairSID(). data, .e. class- numerical variables assigned sample can later accessed via slot cyTags object created e.g. function flowdexit(), also exported file (exporting xlsx). data can helpful convenient analyzing fluorescence distributions.","code":"tr: GPos; Td: 4; wt: nativ; ap: no; th: th1; ha: ha1; bk: b3"},{"path":"https://bpollner.github.io/flowdex/articles/acquire-data.html","id":"using-the-dictionary","dir":"Articles","previous_headings":"Using Structured ID String and Dictionary","what":"Using the Dictionary","title":"Acquire Data","text":"Considering sample-IDs present tutorial fcs files, require dictionary translating present abbreviations long names. , manually copy dictionary flowdexTutorial/dictionary/dictionary.xlsx tapWater@home/dictionary, call Open copied xlsx file, look column named ‘Abbreviation’: element name (first part element) sample ID entry dictionary, along long name (final ‘column name’ thinking spreadsheet).","code":"from <- list.files(paste0(destination, \"/flowdexTutorial/dictionary\"), full.names = TRUE) to <- paste0(destination, \"/tapWater@home/dictionary\") file.copy(from, to)"},{"path":"https://bpollner.github.io/flowdex/articles/acquire-data.html","id":"defining-class--and-numerical-variables","dir":"Articles","previous_headings":"Using Structured ID String and Dictionary","what":"Defining Class- and Numerical Variables","title":"Acquire Data","text":"prepending long names dictionary dedicated strings possible define group either class-variable numerical variable. default string class variables C_ , numerical variables Y_ . Prepending long names dictionary either class-variable numerical variable prefix mandatory. now 108 fcs files ‘tapWater@home/fcsFiles’ one file ‘dictionary.xlsx’ folder ‘tapWater@home/dictionary’. Continue Workflow 1.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/acquire_data.html","id":"simulate-data-acquisition","dir":"Articles","previous_headings":"","what":"Simulate Data Acquisition","title":"Acquire Data","text":"Simulate data acquisition now manually copying files ‘flowdexTutorial/fcsFiles’ ‘tapWater\\@home/fcsFiles’, call","code":"from <- list.files(paste0(destination, \"/flowdexTutorial/fcsFiles\"), full.names = TRUE) to <- paste0(destination, \"/tapWater@home/fcsFiles\") file.copy(from, to)"},{"path":"https://bpollner.github.io/flowdex/articles/acquire_data.html","id":"using-structured-id-string-and-dictionary","dir":"Articles","previous_headings":"","what":"Using Structured ID String and Dictionary","title":"Acquire Data","text":"desired, possible generate class- numerical variables describing sample resp. dataset providing structured character string Sample-ID field sample GUI FCM-machine time data acquisition. character string later expanded using dictionary (located ‘tapWater@home/dictionary’) expand abbreviations long names.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/acquire_data.html","id":"using-the-structured-id-string","dir":"Articles","previous_headings":"Using Structured ID String and Dictionary","what":"Using the Structured ID String","title":"Acquire Data","text":"assigning structured character string sample done time data acquisition GUI FCM-machine, ´d like explain process showing describing used case tutorial data. Lets consider example sample named ‘N_na_GPos_T4_th1_b3.fcs’.: sample experiment-group (‘GPos’), day 4 (‘T4’), first third beakers (‘th1’), beaker number 3 (‘b3’). structured character string now contains elements groups, separated dedicated single character. default value separating groups ; separating elements :. can many groups desired. single group consists exactly two elements: key value, separated per default : . sample , input sample-ID field GUI FCM-machine time data acquisition now : , 7 groups: tr, Td, wt, ap, th, ha bk, separated ;. ‘tr’ e.g. expanded ‘C_treatment’ defined dictionary. ‘GPos’ value first group, meaning sample belongs experiment group (denoted ‘GPos’). next group ‘Td: 4’ means treatment time sample 4 days, . first part element always short name, abbreviation gets expanded long name using dictionary. second part element actual value. first part can thought column name spreadsheet, second part actual value within column. order groups relevant, can different order different samples (confusing data acquisition, recommended). erroneous sample ID provided, can repaired later using function repairSID(). data, .e. class- numerical variables assigned sample can later accessed via slot cyTags object created e.g. function flowdexit(), also exported file (exporting xlsx). data can helpful convenient analyzing fluorescence distributions.","code":"tr: GPos; Td: 4; wt: nativ; ap: no; th: th1; ha: ha1; bk: b3"},{"path":"https://bpollner.github.io/flowdex/articles/acquire_data.html","id":"using-the-dictionary","dir":"Articles","previous_headings":"Using Structured ID String and Dictionary","what":"Using the Dictionary","title":"Acquire Data","text":"Considering sample-IDs present tutorial fcs files, require dictionary translating present abbreviations long names. , manually copy dictionary flowdexTutorial/dictionary/dictionary.xlsx tapWater@home/dictionary, call Open copied xlsx file, look column named ‘Abbreviation’: element name (first part element) sample ID entry dictionary, along long name (final ‘column name’ thinking spreadsheet).","code":"from <- list.files(paste0(destination, \"/flowdexTutorial/dictionary\"), full.names = TRUE) to <- paste0(destination, \"/tapWater@home/dictionary\") file.copy(from, to)"},{"path":"https://bpollner.github.io/flowdex/articles/acquire_data.html","id":"defining-class--and-numerical-variables","dir":"Articles","previous_headings":"Using Structured ID String and Dictionary","what":"Defining Class- and Numerical Variables","title":"Acquire Data","text":"prepending long names dictionary dedicated strings possible define group either class-variable numerical variable. default string class variables C_ , numerical variables Y_ . Prepending long names dictionary either class-variable numerical variable prefix mandatory. now 108 fcs files ‘tapWater@home/fcsFiles’ one file ‘dictionary.xlsx’ folder ‘tapWater@home/dictionary’. Continue Workflow 1.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/description.html","id":"flowdex","dir":"Articles","previous_headings":"","what":"flowdex","title":"Description","text":"Extract Fluorescence Distribution Data FCS Files Recalculate Events per Volume","code":""},{"path":"https://bpollner.github.io/flowdex/articles/description.html","id":"description","dir":"Articles","previous_headings":"flowdex","what":"Description","title":"Description","text":"Extract fluorescence distribution data bivariate distribution within previously defined flow cytometry gating strategy recalculate fluorescence distribution events per volume unit. Additionally, number class- numerical variables describing dataset can generated providing structured character string Sample-ID field individual sample time data acquisition. time reading fcs files, structured character string translated class- numerical variables, using dictionary translate abbreviations long form. Finally, fluorescence-distribution data (possibly) re-calculated events per volume unit can visualised exported file, along data denoting overall events per volume unit sample gate. (meaningfully) use flowdex, fcs files contain volumetric measurement data denoting acquired sample volume. flowdex leaning heavily packages {flowCore}{flowWorkspace} data import, generation gating sets etc. sum , package flowdex can: Extract fluorescence distribution data fcs files recalculate events per volume unit, Generate variables describing dataset using structured character string sample-Id field sample time data acquisition, Visualise fluorescence distributions export file.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/description.html","id":"advantage","dir":"Articles","previous_headings":"flowdex","what":"Advantage","title":"Description","text":"ones hand directly rawdata fluorescence distributions something average desktop GUI FCM-machines providing easily willingly. Package flowdex designed alleviate problem. FCM-machine used data acquisition volumetric measurement module fcs files contain volumetric data, possible re-calculate extracted fluorescence distribution events per volume unit. words, y-axis fluorescence distribution can displayed fixed scale, .e. events per volume unit. enables comparison numbers fixed scale across samples, groups experiments, instead confined compare percentages sub-groups overall population.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/description.html","id":"two-workflow-scenarios","dir":"Articles","previous_headings":"flowdex","what":"Two Workflow Scenarios","title":"Description","text":"two basic scenarios using flowdex define appropriate workflow: Gating strategy polygon gates yet defined. , focus establishing gating strategy manually drawing polygon gates. Gating strategy polygon gates already defined. , focus using previously established gating strategy extract fluorescence distributions, visualise export file. (except visualisation) conveniently done via flowdexit(). Look Quickstart immediate example.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/flowdex.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Get Started","text":"Install release version CRAN via download github:","code":"install.packages(\"flowdex\") library(devtools)  install_github(repo=\"bpollner/flowdex\", ref=\"main\")"},{"path":"https://bpollner.github.io/flowdex/articles/flowdex.html","id":"download-tutorial-dataset","dir":"Articles","previous_headings":"","what":"Download Tutorial Dataset","title":"Get Started","text":"order walk user main-features package flowdex, small tutorial-dataset created, along gating strategy files required polygon-gate definitions. Also, workflow create gating strategy file polygon gate definitions explained. First, download tutorial data Github repository desktop (place prefer). (code tutorial also available file ‘flowdexTutorial.R’ uncompressed folder.)","code":"from <- \"https://github.com/bpollner/data/raw/main/flowdexTutorial/flowdexTutorial.zip\" destination <- \"~/desktop\" targetZip <- paste0(destination, \"/flowdexTutorial.zip\") download.file(from, targetZip, mode=\"wb\") unzip(targetZip, exdir = destination)"},{"path":"https://bpollner.github.io/flowdex/articles/flowdex.html","id":"note-description-of-tutorial-dataset","dir":"Articles","previous_headings":"Download Tutorial Dataset","what":"Note: Description of Tutorial Dataset","title":"Get Started","text":"samples tap water samples stained cybergreen following method described : Prest, E. ., Hammes, F., Kotzsch, S., van Loosdrecht, M. C., & Vrouwenvelder, J. S. (2013). Monitoring microbiological changes drinking water systems using fast reproducible flow cytometric method. Water Research, 47(19), 7131-7142 https://doi.org/10.1016/j.watres.2013.07.051 purpose experiment monitor number autochthonous bacteria water samples fluorescence distribution (LNA vs. HNA bacteria) time. sample-ID string provided time data acquisition, providing class numerical variables describing sample described . two groups, experiment control. experiment group denoted ‘GPos’, control group denoted ‘GNeg’. group, 24 samples taken day, 18 samples included dataset. fcs files day 4, day 5 day 6 included (denoted T4, T5, T6). 18 samples per day group structured ‘thirds’ beaker number: th1, th2 th3 first, second third third 18 samples, b1, b2, … b6 6 samples (b beaker) within third.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/flowdex.html","id":"initialise-settings-file-system","dir":"Articles","previous_headings":"","what":"Initialise Settings File System","title":"Get Started","text":"Package flowdex makes use dynamic settings file system provided package uniset. initialised just calling Follow -screen instructions possibly re-start R. now , various global settings default values used flowdex can conveniently viewed changed file flowdex_settings.R residing ~/desktop/flowdex_SH (kept example).","code":"library(flowdex) destination <- \"~/desktop\" setupSettings(destination)"},{"path":"https://bpollner.github.io/flowdex/articles/flowdex.html","id":"quickstart","dir":"Articles","previous_headings":"","what":"Quickstart","title":"Get Started","text":"() set settings file system, dive straight – quickstart immediately see flowdex can , call: Look ‘flowdexTutorial/rawdata/flscData_gateStrat.xlsx.xlsx’ see fluorescence distribution exported file, observe various sheets .","code":"destination <- \"~/desktop\" # again, as R was possibly restarted setwd(paste0(destination, \"/flowdexTutorial\")) library(flowdex) fdmat <- flowdexit() # this might take a few seconds fdmat@pData # to inspect volume and sample ID data fdmat@cyTags # to inspect class- and numerical variables assigned to each sample fdmat[[1]] # to inspect fluorescence distribution"},{"path":"https://bpollner.github.io/flowdex/articles/flowdex.html","id":"prepare-folder-structure","dir":"Articles","previous_headings":"","what":"Prepare Folder Structure","title":"Get Started","text":"Take step step, interested quickstart : assume data single experiment residing single folder – ‘home’ folder experiment. Within home-folder, flowdex requires simple folder structure properly work. Create folder structure now within newly created experiment home-folder called ‘tapWater@home’: Continue data acquisition, straight Workflow 2, can learn extract fluorescence distributions visualize .","code":"destination <- \"~/desktop\" # again, as R was possibly restarted expHome <- paste0(destination, \"/tapWater@home\")  dir.create(expHome) setwd(expHome) library(flowdex) # as you might have had to restart R above genfs() # create the required folder structure"},{"path":"https://bpollner.github.io/flowdex/articles/set-up-tutorial.html","id":"download-tutorial-dataset","dir":"Articles","previous_headings":"","what":"Download Tutorial Dataset","title":"Set up Tutorial","text":"First, download tutorial data Github repository desktop (place prefer). (code tutorial also available file ‘flowdexTutorial.R’ uncompressed folder.)","code":"from <- \"https://github.com/bpollner/data/raw/main/flowdexTutorial/flowdexTutorial.zip\" destination <- \"~/desktop\" targetZip <- paste0(destination, \"/flowdexTutorial.zip\") download.file(from, targetZip, mode=\"wb\") unzip(targetZip, exdir = destination)"},{"path":"https://bpollner.github.io/flowdex/articles/set-up-tutorial.html","id":"note-description-of-tutorial-dataset","dir":"Articles","previous_headings":"Download Tutorial Dataset","what":"Note: Description of Tutorial Dataset","title":"Set up Tutorial","text":"samples tap water samples stained cybergreen following method described : Prest, E. ., Hammes, F., Kotzsch, S., van Loosdrecht, M. C., & Vrouwenvelder, J. S. (2013). Monitoring microbiological changes drinking water systems using fast reproducible flow cytometric method. Water Research, 47(19), 7131-7142 https://doi.org/10.1016/j.watres.2013.07.051 purpose experiment monitor number autochthonous bacteria water samples fluorescence distribution (LNA vs. HNA bacteria) time. sample-ID string provided time data acquisition, providing class numerical variables describing sample described . two groups, experiment control. experiment group denoted ‘GPos’, control group denoted ‘GNeg’. group, 24 samples taken day, 18 samples included dataset. fcs files day 4, day 5 day 6 included (denoted T4, T5, T6). 18 samples per day group structured ‘thirds’ beaker number: th1, th2 th3 first, second third third 18 samples, b1, b2, … b6 6 samples (b beaker) within third.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/set-up-tutorial.html","id":"initialise-settings-file-system","dir":"Articles","previous_headings":"","what":"Initialise Settings File System","title":"Set up Tutorial","text":"Package flowdex makes use dynamic settings file system provided package uniset. initialised just calling Follow -screen instructions possibly re-start R. now , various global settings default values used flowdex can conveniently viewed changed file flowdex_settings.R residing ~/desktop/flowdex_SH (kept example).","code":"library(flowdex) destination <- \"~/desktop\" setupSettings(destination)"},{"path":"https://bpollner.github.io/flowdex/articles/set-up-tutorial.html","id":"quickstart","dir":"Articles","previous_headings":"","what":"Quickstart","title":"Set up Tutorial","text":"() set settings file system, dive straight – quickstart immediately see flowdex can , call: Look ‘flowdexTutorial/rawdata/flscData_gateStrat.xlsx.xlsx’ see fluorescence distribution exported file, observe various sheets .","code":"destination <- \"~/desktop\" # again, as R was possibly restarted setwd(paste0(destination, \"/flowdexTutorial\")) library(flowdex) fdmat <- flowdexit() # this might take a few seconds fdmat@pData # to inspect volume and sample ID data fdmat@cyTags # to inspect class- and numerical variables assigned to each sample fdmat[[1]] # to inspect fluorescence distribution"},{"path":"https://bpollner.github.io/flowdex/articles/set-up-tutorial.html","id":"prepare-folder-structure","dir":"Articles","previous_headings":"","what":"Prepare Folder Structure","title":"Set up Tutorial","text":"Take step step, interested quickstart : assume data single experiment residing single folder – ‘home’ folder experiment. Within home-folder, flowdex requires simple folder structure properly work. Create folder structure now within newly created experiment home-folder called ‘tapWater@home’: want, can now go straight Workflow B, can learn extract fluorescence distributions visualize .","code":"destination <- \"~/desktop\" # again, as R was possibly restarted expHome <- paste0(destination, \"/tapWater@home\")  dir.create(expHome) setwd(expHome) library(flowdex) # as you might have had to restart R above genfs() # create the required folder structure"},{"path":"https://bpollner.github.io/flowdex/articles/workflow-1.html","id":"workflow-1","dir":"Articles","previous_headings":"","what":"Workflow 1","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"already done, set tutorial data described Get Started. next step data acquisition visualize raw-counts, decide sample use drawing gate, manually draw polygon gate(s) safe later use. row gating strategy file defines single gate along polygon gate definition. Gates can nested ‘standalone’.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/workflow-1.html","id":"read-in-fcs-files-and-make-gating-set","dir":"Articles","previous_headings":"","what":"Read in fcs Files and Make Gating Set","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"drawing polygon gate single sample, read fcs files produce gating set. everything left default, read 108 fcs-files contained folder ‘fcsFiles’. purpose demonstration restrict fcs files read lower number defining filename pattern: fcs files matching pattern read . Note printout samples contained gating set available channels. fcs files experiment group day 6 (second third, .e. 6 beakers) read . can now use reduced gating set visualise raw fcs data specifying channel want x y axis:","code":"gsAll <- makeGatingSet() gsRed <- makeGatingSet(patt=\"GPos_T6_th2\") gsRed plotgates(gsRed, toPdf = FALSE, x=\"FITC.A\", y=\"PerCP.A\")"},{"path":"https://bpollner.github.io/flowdex/articles/workflow-1.html","id":"manually-draw-polygon-gate","dir":"Articles","previous_headings":"","what":"Manually Draw Polygon Gate","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"6 samples seem good representation desired population, stained bacteria. Lets assume choose beaker ‘GPos_T6_th2_b5’, 5th sample gating set, sample manually draw polygon gate : gnis name gate want use display data. gates yet defined let alone added gating set, leave default ‘root’. pggId specifies name new polygon gate saved . left default, ‘polyGate’ used. channels specifying channels want displayed x y axis. Defaults ‘c(“FITC.”, “PerCP.”)’. lines displayed graphic origin bnd argument, defining boundaries displayed. (default values can easily changed ‘flowdex_settings.R’ file located ‘~/desktop/flowdex_SH’.) satisfied polygon gate definition, can draw simultaneously displaying (old) gate: Polygon gate definitions get automatically saved specified name folder ‘gating’. can leave gate definition ‘BactStainV1’ drawing , can copy gate definition originally drawn project:","code":"drawGate(gsRed, flf=5, gn=\"root\", pggId=\"BactStainV1\", channels=\".\") # point and click to draw a polygon gate around the population of interest drawGate(gsRed, flf=5, gn=\"root\", pggId=\"BactStainV1\", show=\"BactStainV1\")  # point and click to draw an improved polygon gate around the population of interest from <- paste0(destination, \"/flowdexTutorial/gating/BactStainV1\") to <- paste0(destination, \"/tapWater@home/gating\") file.copy(from, to, overwrite = TRUE)"},{"path":"https://bpollner.github.io/flowdex/articles/workflow-1.html","id":"write-gating-strategy","dir":"Articles","previous_headings":"","what":"Write Gating Strategy","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"gate want apply gating set, one row gating strategy file. Now copy template gating strategy file experiment home folder: Open copied file. every gate, .e. every row, 8 fields filled . ‘GateName’ , obviously, name gate. Short names recommended. ‘Parent’ name parent-gate, .e. gate data coming . first row, ‘root’. ‘GateOnX’ GateOnY’ define channels used gate x y axis. ‘GateDefinition’ name polygon gate manually drawn previous step. ‘extractOn’ defines channel, .e. along axis fluorescence data extracted. Must either channel used x axis channel used y axis. ‘minRange’ ‘maxRange’ define lower upper limit channel data extracted. ‘keepData’ denoting whether data gate kept . Set field FALSE data gate interest merely used prepare data , nested gate. least one field ‘keepData’ set TRUE. column names must changed. example hand, fill gating strategy file follows: copy already filled gating strategy file defining gate ‘DNA+’ polygon gate definition ‘BactStainV1’ tutorial folder: Now everything ready apply gating strategy gating set:","code":"from <- paste0(destination, \"/tapWater@home/templates/gateStrat.xlsx\") to <- paste0(destination, \"/tapWater@home/gating\") file.copy(from, to) GateName: DNA+ Parent: foot GateOnX: FITC.A GateOnY: PerCP.A GateDefinition: BactStainV1 extractOn: FITC.A minRange: 1250 maxRange: 4000 keepData: TRUE from <- paste0(destination, \"/flowdexTutorial/gating/gateStrat.xlsx\") to <- paste0(destination, \"/tapWater@home/gating\") file.copy(from, to, overwrite=TRUE) gsRed_ga <- addGates(gsRed) flowWorkspace::plot(gsRed_ga) # to view the gate hierarchy  plotgates(gsRed_ga, toPdf = FALSE) # to view the gated data"},{"path":"https://bpollner.github.io/flowdex/articles/workflow-1.html","id":"draw-gate-add-to-gating-strategy-add-gate-to-gating-set-and-repeat","dir":"Articles","previous_headings":"","what":"Draw Gate, Add to Gating Strategy, Add Gate to Gating Set – and Repeat","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"one gate defined gating strategy, circle * drawing gate single sample, * adding gate gating strategy, * adding gate gating set repeated every gate applied fcs data. next iteration, .e. example second gate within data first gate defined, one call: Repeat three steps define set possibly nested gates. can always view gating hierarchy gated data via:","code":"drawGate(gsRed_ga, flf=5, gn=\"DNA+\", pggId=\"pg2\", channels = c(\"FITC.A\", \"SSC.A\")) # point and click to draw a polygon gate around the population of interest  # add the gate in the gating strategy file: GateName: FooGate Parent: DNA+ GateOnX: FITC.A GateOnY: SSC.A GateDefinition: pg2 extractOn: SSC.A minRange: 0 maxRange: 4000 keepData: TRUE  gsRed_ga <- addGates(gsRed_ga) # add the gate to the gating set flowWorkspace::plot(gsRed_ga) # to view the gating hierarchy plotgates(gsRed_ga, toPdf = F) # to view the gated data"},{"path":"https://bpollner.github.io/flowdex/articles/workflow-1.html","id":"use-a-ready-made-example-for-nested-gates","dir":"Articles","previous_headings":"Draw Gate, Add to Gating Strategy, Add Gate to Gating Set – and Repeat","what":"Use a Ready-Made Example for Nested Gates","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"Now copy ready made example gating strategy holding one gate tutorial folder experiment home folder apply gating set. ease demonstration, use subset fcs files . Reading fcs files adding gates can conveniently done using makeAddGatingSet(): Note gated data get displayed ‘plotgates’ field ‘keepData’ gating strategy file set ‘TRUE’. (Admittedly, practical value gating hierarchy rather non-existent, merely demonstrating setup nested gates…) Continue Workflow 2.","code":"from <- list.files(paste0(destination, \"/flowdexTutorial/gating\"), full.names = TRUE) to <- paste0(destination, \"/tapWater@home/gating\") file.copy(from, to, overwrite=TRUE) # this might overwrite the polygon gate definition you created above gsRed2 <- makeAddGatingSet(patt=\"GPos_T6_th2\", gateStrat = \"gateStrat_2\") # we are not using the default name for gating strategy any more flowWorkspace::plot(gsRed2) # to view the gating hierarchy plotgates(gsRed2, toPdf = F) # to view the gated data"},{"path":"https://bpollner.github.io/flowdex/articles/workflow-2.html","id":"workflow-2","dir":"Articles","previous_headings":"","what":"Workflow 2","title":"Workflow 2: Extract Fluorescence Distributions","text":"already done, set tutorial data described Get Started. Now copy () relevant files tutorial folder experiment-home folder:","code":"destination <- \"~/desktop\" fromFcs <- list.files(paste0(destination, \"/flowdexTutorial/fcsFiles\"), full.names=TRUE) fromDict <- list.files(paste0(destination, \"/flowdexTutorial/dictionary\"), full.names=TRUE) fromGating <- list.files(paste0(destination, \"/flowdexTutorial/gating\"), full.names=TRUE) toFcs <- paste0(destination, \"/tapWater@home/fcsFiles\") toDict <- paste0(destination, \"/tapWater@home/dictionary\") toGating <- paste0(destination, \"/tapWater@home/gating\") # file.copy(fromFcs, toFcs, overwrite=TRUE) file.copy(fromDict, toDict, overwrite=TRUE) file.copy(fromGating, toGating, overwrite=TRUE)"},{"path":"https://bpollner.github.io/flowdex/articles/workflow-2.html","id":"flowdexit","dir":"Articles","previous_headings":"","what":"Flowdexit","title":"Workflow 2: Extract Fluorescence Distributions","text":"Using flowdexit() straight-forward way extract fluorescence distributions gating strategy gate definitions checked place. (Read Workflow 1 learning write gating strategy define polygon gates.) point assume Provided structured ID character sample ID field sample GUI FCM-machine, completed data acquisition fcs files folder called ‘fcsFiles’, dictionary file abbreviations structured ID character listed folder called ‘dictionary’, gating strategy file along gate definitions folder called ‘gating’. requirements met, can call: use default gating strategy called ‘gateStrat’ (one (1) gate defined), extract fluorescence distributions along ‘FITC.’ channel (example), re-calculate events per ml save resulting data xlsx file (along metadata etc. additional sheets). resulting R-object saved disc well. (See also fd_save() fd_load() manually save load resulting ‘fdmat’ object.) calling flowdexit(), gating set built way extract fluorescence distributions gets assigned extra environment. can accessed via: Lets bit ambitious try (slightly non-sensical) gating strategy multiple nested gates defined, called ‘gateStrat_2’: , gating set produced way can accessed via: Please observe every call flowdexit() assign object gatingSetto environment gsenv. , one gating set, last one produced calling flowdexit(), can accessed environment.","code":"fdmat1 <- flowdexit() # and to inspect the result: fdmat1 # displaying cyTags and sample IDs (in the slot pDAta) fdmat1[[1]] # displaying data from the first (and only) gate gs1 <- gsenv$gatingSet # inspect the gating set: gs1 flowWorkspace::plot(gs1) fdmat2 <- flowdexit(gateStrat = \"gateStrat_2\") # and to inspect the result: fdmat2 # displaying cyTags and sample IDs (in the slot pDAta) fdmat2[[1]] # displaying data from the first gate fdmat2[[2]] # displaying data from the second gate gs2 <- gsenv$gatingSet # inspect the gating set: gs2 flowWorkspace::plot(gs2)"},{"path":"https://bpollner.github.io/flowdex/articles/workflow-2.html","id":"visualize-gates","dir":"Articles","previous_headings":"","what":"Visualize Gates","title":"Workflow 2: Extract Fluorescence Distributions","text":"visualize gated data call plot gated data samples one page, bit much – making single plot small. improve , possible define column name cyTags (can found ‘fdmat’ object) used split data, resulting samples plotted graphic share value specified cyTag-column: (resulting pdf can found folder ‘plots’; ‘toPdf’ defaults TRUE). way samples day one graphic - useful output, still rather small individual plots. solution read fcs files day, use plotgates() split ‘C_treatment’. Lets try using function makeAddGatingSet(): gives nice small graphics gated data sample. Please observe gated data get plotted every gate gating strategy ‘keepData’ set TRUE. Set argument ‘plotAll’ function ‘plotgates’ TRUE override plot gated data gates defined gating strategy, can helpful process checking / verifying gating strategy:","code":"plotgates(gs1, toPdf = FALSE) # a bit much on one graphic colnames(fdmat1@cyTags) plotgates(gs1, spl=\"Y_Time.d\", toPdf = TRUE) gs_d4 <- makeAddGatingSet(patt = \"T4\", gateStrat = \"gateStrat_2\") plotgates(gs_d4, spl=\"C_treatment\", fns=\"_day4\") gs_d5 <- makeAddGatingSet(patt = \"T5\", gateStrat = \"gateStrat_2\") plotgates(gs_d5, spl=\"C_treatment\", fns=\"_day5\") gs_d6 <- makeAddGatingSet(patt = \"T6\", gateStrat = \"gateStrat_2\") plotgates(gs_d6, spl=\"C_treatment\", fns=\"_day6\") plotgates(gs_d6, spl=\"C_treatment\", fns=\"_day6_allGates\", plotAll = TRUE)"},{"path":"https://bpollner.github.io/flowdex/articles/workflow-2.html","id":"visualize-fluorescence-distribution","dir":"Articles","previous_headings":"","what":"Visualize Fluorescence Distribution","title":"Workflow 2: Extract Fluorescence Distributions","text":"(Note: functionality visualize fluorescence distribution merely intended give first view data. intended data analysis presentation.) purpose flowdex extract fluorescence distributions, borderline obscene least basic way visually inspect result. can calling (, default behavior export plot pdf located folder ‘plots’.) Fluorescence intensities samples along FITC channel (example) displayed re-calculated events per volume y-axis . , much information. , purpose demonstration, look subset data, samples day 4 first third beakers. providing pattern read filenames match pattern: , plotgates(), possible split data providing column name cyTags samples graphic value cyTag: Please refer manual plotFlscDist() see arguments custom colors custom linetypes. Go learn Accessory Functions.","code":"plotFlscDist(fdmat1) fdmat_s <- flowdexit(patt = \"T4_th1\") fdmat_s # has now only 12 samples gs_s <- gsenv$gatingSet # not required, just to keep it # plotFlscDist(fdmat_s, toPdf = FALSE) # much nicer colnames(fdmat_s@cyTags) plotFlscDist(fdmat_s, spl = \"C_treatment\",  ti=\"Day 4, first third\",  toPdf = FALSE) plotFlscDist(fdmat_s, spl = \"C_treatment\", fns=\"_d4_th1\", ti=\"Day 4, first third\") # export to pdf"},{"path":"https://bpollner.github.io/flowdex/articles/workflow_1.html","id":"workflow-1","dir":"Articles","previous_headings":"","what":"Workflow 1","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"already done, set tutorial data described Get Started. next step data acquisition visualize raw-counts, decide sample use drawing gate, manually draw polygon gate(s) safe later use. row gating strategy file defines single gate along polygon gate definition. Gates can nested ‘standalone’.","code":""},{"path":"https://bpollner.github.io/flowdex/articles/workflow_1.html","id":"read-in-fcs-files-and-make-gating-set","dir":"Articles","previous_headings":"","what":"Read in fcs Files and Make Gating Set","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"drawing polygon gate single sample, read fcs files produce gating set. everything left default, read 108 fcs-files contained folder ‘fcsFiles’. purpose demonstration restrict fcs files read lower number defining filename pattern: fcs files matching pattern read . Note printout samples contained gating set available channels. fcs files experiment group day 6 (second third, .e. 6 beakers) read . can now use reduced gating set visualise raw fcs data specifying channel want x y axis:","code":"gsAll <- makeGatingSet() gsRed <- makeGatingSet(patt=\"GPos_T6_th2\") gsRed plotgates(gsRed, toPdf = FALSE, x=\"FITC.A\", y=\"PerCP.A\")"},{"path":"https://bpollner.github.io/flowdex/articles/workflow_1.html","id":"manually-draw-polygon-gate","dir":"Articles","previous_headings":"","what":"Manually Draw Polygon Gate","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"6 samples seem good representation desired population, stained bacteria. Lets assume choose beaker ‘GPos_T6_th2_b5’, 5th sample gating set, sample manually draw polygon gate : gnis name gate want use display data. gates yet defined let alone added gating set, leave default ‘root’. pggId specifies name new polygon gate saved . left default, ‘polyGate’ used. channels specifying channels want displayed x y axis. Defaults ‘c(“FITC.”, “PerCP.”)’. lines displayed graphic origin bnd argument, defining boundaries displayed. (default values can easily changed ‘flowdex_settings.R’ file located ‘~/desktop/flowdex_SH’.) satisfied polygon gate definition, can draw simultaneously displaying (old) gate: Polygon gate definitions get automatically saved specified name folder ‘gating’. can leave gate definition ‘BactStainV1’ drawing , can copy gate definition originally drawn project:","code":"drawGate(gsRed, flf=5, gn=\"root\", pggId=\"BactStainV1\", channels=\".\") # point and click to draw a polygon gate around the population of interest drawGate(gsRed, flf=5, gn=\"root\", pggId=\"BactStainV1\", show=\"BactStainV1\")  # point and click to draw an improved polygon gate around the population of interest from <- paste0(destination, \"/flowdexTutorial/gating/BactStainV1\") to <- paste0(destination, \"/tapWater@home/gating\") file.copy(from, to, overwrite = TRUE)"},{"path":"https://bpollner.github.io/flowdex/articles/workflow_1.html","id":"write-gating-strategy","dir":"Articles","previous_headings":"","what":"Write Gating Strategy","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"gate want apply gating set, one row gating strategy file. Now copy template gating strategy file experiment home folder: Open copied file. every gate, .e. every row, 8 fields filled . ‘GateName’ , obviously, name gate. Short names recommended. ‘Parent’ name parent-gate, .e. gate data coming . first row, ‘root’. ‘GateOnX’ GateOnY’ define channels used gate x y axis. ‘GateDefinition’ name polygon gate manually drawn previous step. ‘extractOn’ defines channel, .e. along axis fluorescence data extracted. Must either channel used x axis channel used y axis. ‘minRange’ ‘maxRange’ define lower upper limit channel data extracted. ‘keepData’ denoting whether data gate kept . Set field FALSE data gate interest merely used prepare data , nested gate. least one field ‘keepData’ set TRUE. column names must changed. example hand, fill gating strategy file follows: copy already filled gating strategy file defining gate ‘DNA+’ polygon gate definition ‘BactStainV1’ tutorial folder: Now everything ready apply gating strategy gating set:","code":"from <- paste0(destination, \"/tapWater@home/templates/gateStrat.xlsx\") to <- paste0(destination, \"/tapWater@home/gating\") file.copy(from, to) GateName: DNA+ Parent: foot GateOnX: FITC.A GateOnY: PerCP.A GateDefinition: BactStainV1 extractOn: FITC.A minRange: 1250 maxRange: 4000 keepData: TRUE from <- paste0(destination, \"/flowdexTutorial/gating/gateStrat.xlsx\") to <- paste0(destination, \"/tapWater@home/gating\") file.copy(from, to, overwrite=TRUE) gsRed_ga <- addGates(gsRed) flowWorkspace::plot(gsRed_ga) # to view the gate hierarchy  plotgates(gsRed_ga, toPdf = FALSE) # to view the gated data"},{"path":"https://bpollner.github.io/flowdex/articles/workflow_1.html","id":"draw-gate-add-to-gating-strategy-add-gate-to-gating-set-and-repeat","dir":"Articles","previous_headings":"","what":"Draw Gate, Add to Gating Strategy, Add Gate to Gating Set – and Repeat","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"one gate defined gating strategy, circle * drawing gate single sample, * adding gate gating strategy, * adding gate gating set repeated every gate applied fcs data. next iteration, .e. example second gate within data first gate defined, one call: Repeat three steps define set possibly nested gates. can always view gating hierarchy gated data via:","code":"drawGate(gsRed_ga, flf=5, gn=\"DNA+\", pggId=\"pg2\", channels = c(\"FITC.A\", \"SSC.A\")) # point and click to draw a polygon gate around the population of interest  # add the gate in the gating strategy file: GateName: FooGate Parent: DNA+ GateOnX: FITC.A GateOnY: SSC.A GateDefinition: pg2 extractOn: SSC.A minRange: 0 maxRange: 4000 keepData: TRUE  gsRed_ga <- addGates(gsRed_ga) # add the gate to the gating set flowWorkspace::plot(gsRed_ga) # to view the gating hierarchy plotgates(gsRed_ga, toPdf = F) # to view the gated data"},{"path":"https://bpollner.github.io/flowdex/articles/workflow_1.html","id":"use-a-ready-made-example-for-nested-gates","dir":"Articles","previous_headings":"Draw Gate, Add to Gating Strategy, Add Gate to Gating Set – and Repeat","what":"Use a Ready-Made Example for Nested Gates","title":"Workflow 1: Define Gating Strategy and Polygon Gates","text":"Now copy ready made example gating strategy holding one gate tutorial folder experiment home folder apply gating set. ease demonstration, use subset fcs files . Reading fcs files adding gates can conveniently done using makeAddGatingSet(): Note gated data get displayed ‘plotgates’ field ‘keepData’ gating strategy file set ‘TRUE’. (Admittedly, practical value gating hierarchy rather non-existent, merely demonstrating setup nested gates…) Continue Workflow 2.","code":"from <- list.files(paste0(destination, \"/flowdexTutorial/gating\"), full.names = TRUE) to <- paste0(destination, \"/tapWater@home/gating\") file.copy(from, to, overwrite=TRUE) # this might overwrite the polygon gate definition you created above gsRed2 <- makeAddGatingSet(patt=\"GPos_T6_th2\", gateStrat = \"gateStrat_2\") # we are not using the default name for gating strategy any more flowWorkspace::plot(gsRed2) # to view the gating hierarchy plotgates(gsRed2, toPdf = F) # to view the gated data"},{"path":"https://bpollner.github.io/flowdex/articles/workflow_2.html","id":"workflow-2","dir":"Articles","previous_headings":"","what":"Workflow 2","title":"Workflow 2: Extract Fluorescence Distributions","text":"already done, set tutorial data described Get Started. Now copy () relevant files tutorial folder experiment-home folder:","code":"destination <- \"~/desktop\" fromFcs <- list.files(paste0(destination, \"/flowdexTutorial/fcsFiles\"), full.names=TRUE) fromDict <- list.files(paste0(destination, \"/flowdexTutorial/dictionary\"), full.names=TRUE) fromGating <- list.files(paste0(destination, \"/flowdexTutorial/gating\"), full.names=TRUE) toFcs <- paste0(destination, \"/tapWater@home/fcsFiles\") toDict <- paste0(destination, \"/tapWater@home/dictionary\") toGating <- paste0(destination, \"/tapWater@home/gating\") # file.copy(fromFcs, toFcs, overwrite=TRUE) file.copy(fromDict, toDict, overwrite=TRUE) file.copy(fromGating, toGating, overwrite=TRUE)"},{"path":"https://bpollner.github.io/flowdex/articles/workflow_2.html","id":"flowdexit","dir":"Articles","previous_headings":"","what":"Flowdexit","title":"Workflow 2: Extract Fluorescence Distributions","text":"Using flowdexit() straight-forward way extract fluorescence distributions gating strategy gate definitions checked place. (Read Workflow 1 learning write gating strategy define polygon gates.) point assume Provided structured ID character sample ID field sample GUI FCM-machine, completed data acquisition fcs files folder called ‘fcsFiles’, dictionary file abbreviations structured ID character listed folder called ‘dictionary’, gating strategy file along gate definitions folder called ‘gating’. requirements met, can call: use default gating strategy called ‘gateStrat’ (one (1) gate defined), extract fluorescence distributions along ‘FITC.’ channel (example), re-calculate events per ml save resulting data xlsx file (along metadata etc. additional sheets). resulting R-object saved disc well. (See also fd_save() fd_load() manually save load resulting ‘fdmat’ object.) calling flowdexit(), gating set built way extract fluorescence distributions gets assigned extra environment. can accessed via: Lets bit ambitious try (slightly non-sensical) gating strategy multiple nested gates defined, called ‘gateStrat_2’: , gating set produced way can accessed via: Please observe every call flowdexit() assign object gatingSetto environment gsenv. , one gating set, last one produced calling flowdexit(), can accessed environment.","code":"fdmat1 <- flowdexit() # and to inspect the result: fdmat1 # displaying cyTags and sample IDs (in the slot pDAta) fdmat1[[1]] # displaying data from the first (and only) gate gs1 <- gsenv$gatingSet # inspect the gating set: gs1 flowWorkspace::plot(gs1) fdmat2 <- flowdexit(gateStrat = \"gateStrat_2\") # and to inspect the result: fdmat2 # displaying cyTags and sample IDs (in the slot pDAta) fdmat2[[1]] # displaying data from the first gate fdmat2[[2]] # displaying data from the second gate gs2 <- gsenv$gatingSet # inspect the gating set: gs2 flowWorkspace::plot(gs2)"},{"path":"https://bpollner.github.io/flowdex/articles/workflow_2.html","id":"visualize-gates","dir":"Articles","previous_headings":"","what":"Visualize Gates","title":"Workflow 2: Extract Fluorescence Distributions","text":"visualize gated data call plot gated data samples one page, bit much – making single plot small. improve , possible define column name cyTags (can found ‘fdmat’ object) used split data, resulting samples plotted graphic share value specified cyTags-column: (resulting pdf can found folder ‘plots’; ‘toPdf’ defaults TRUE). way samples day one graphic - useful output, still rather small individual plots. solution read fcs files day, use plotgates() split ‘C_treatment’. Lets try using function makeAddGatingSet(): gives nice small graphics gated data sample. Please observe gated data get plotted every gate gating strategy ‘keepData’ set TRUE. Set argument ‘plotAll’ function ‘plotgates’ TRUE override plot gated data gates defined gating strategy, can helpful process checking / verifying gating strategy:","code":"plotgates(gs1, toPdf = FALSE) # a bit much on one graphic colnames(fdmat1@cyTags) plotgates(gs1, spl=\"Y_Time.d\", toPdf = TRUE) gs_d4 <- makeAddGatingSet(patt = \"T4\", gateStrat = \"gateStrat_2\") plotgates(gs_d4, spl=\"C_treatment\", fns=\"_day4\") gs_d5 <- makeAddGatingSet(patt = \"T5\", gateStrat = \"gateStrat_2\") plotgates(gs_d5, spl=\"C_treatment\", fns=\"_day5\") gs_d6 <- makeAddGatingSet(patt = \"T6\", gateStrat = \"gateStrat_2\") plotgates(gs_d6, spl=\"C_treatment\", fns=\"_day6\") plotgates(gs_d6, spl=\"C_treatment\", fns=\"_day6_allGates\", plotAll = TRUE)"},{"path":"https://bpollner.github.io/flowdex/articles/workflow_2.html","id":"visualize-fluorescence-distribution","dir":"Articles","previous_headings":"","what":"Visualize Fluorescence Distribution","title":"Workflow 2: Extract Fluorescence Distributions","text":"(Note: functionality visualize fluorescence distribution merely intended give first view data. intended data analysis presentation.) purpose flowdex extract fluorescence distributions, borderline obscene least basic way visually inspect result. can calling (, default behavior export plot pdf located folder ‘plots’.) Fluorescence intensities samples along FITC channel (example) displayed re-calculated events per volume y-axis . , much information. , purpose demonstration, look subset data, samples day 4 first third beakers. providing pattern read filenames match pattern: , plotgates(), possible split data providing column name cyTags samples graphic value cyTag: Please refer manual plotFlscDist() see arguments custom colors custom linetypes. Go learn Accessory Functions.","code":"plotFlscDist(fdmat1) fdmat_s <- flowdexit(patt = \"T4_th1\") fdmat_s # has now only 12 samples gs_s <- gsenv$gatingSet # not required, just to keep it # plotFlscDist(fdmat_s, toPdf = FALSE) # much nicer colnames(fdmat_s@cyTags) plotFlscDist(fdmat_s, spl = \"C_treatment\",  ti=\"Day 4, first third\",  toPdf = FALSE) plotFlscDist(fdmat_s, spl = \"C_treatment\", fns=\"_d4_th1\", ti=\"Day 4, first third\") # export to pdf"},{"path":"https://bpollner.github.io/flowdex/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bernhard Pollner. Maintainer, author.","code":""},{"path":"https://bpollner.github.io/flowdex/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pollner B (2022). flowdex: Extract Fluorescence Distribution Data FCS Files Recalculate Events per Volume. https://bpollner.github.io/flowdex/, https://github.com/bpollner/flowdex.","code":"@Manual{,   title = {flowdex: Extract Fluorescence Distribution Data from FCS Files and Recalculate to Events per Volume},   author = {Bernhard Pollner},   year = {2022},   note = {https://bpollner.github.io/flowdex/, https://github.com/bpollner/flowdex}, }"},{"path":"https://bpollner.github.io/flowdex/index.html","id":"flowdex","dir":"","previous_headings":"","what":"Extract Fluorescence Distribution Data from FCS Files and Recalculate to Events per Volume","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate to Events per Volume","text":"Extract Fluorescence Distribution Data FCS Files Recalculate Events per Volume","code":""},{"path":"https://bpollner.github.io/flowdex/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate to Events per Volume","text":"Package flowdex can: Extract fluorescence distribution data fcs files recalculate events per volume unit, Apply custom-built gating strategy fcs files, Generate variables describing dataset using structured character string sample-Id field sample, Visualise fluorescence distributions export file, along data denoting overall events per volume unit sample gate. (meaningfully) use flowdex, fcs files contain volumetric measurement data denoting acquired sample volume.","code":""},{"path":"https://bpollner.github.io/flowdex/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate to Events per Volume","text":"Install release version CRAN via download github:","code":"install.packages(\"flowdex\") library(devtools) install_github(repo=\"bpollner/flowdex\", ref=\"main\")"},{"path":"https://bpollner.github.io/flowdex/reference/addGates.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Polygon Gates — addGates","title":"Add Polygon Gates — addGates","text":"Load predefined gating strategy (.csv .xlsx file) apply gates defined file.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/addGates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Polygon Gates — addGates","text":"","code":"addGates(   gs,   gateStrat = \".\",   foN.gateStrat = \".\",   type.gateStrat = \".\",   verbose = \".\" )"},{"path":"https://bpollner.github.io/flowdex/reference/addGates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Polygon Gates — addGates","text":"gs gating set produced makeGatingSet. gateStrat Character length one. name file defining gating strategy. left default '.', name defined settings file (key: 'fiN_gateStrat') used. foN.gateStrat Character length one. name folder file defining gating strategy gate definitions reside. left default '.', name defined settings file (key: 'foN_gating') used. type.gateStrat Character length one, can either 'csv' 'xlsx'. type file defining gating strategy. Currently, csv xlsx files supported. left default '.', filetype defined settings (key: 'dV_gateStratInputType') file used. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/addGates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Polygon Gates — addGates","text":"object class-GatingSet_fd.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/addGates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Polygon Gates — addGates","text":"gating strategy file can hold one gates. One row files represents one gate. order see schematic representation 'parent' 'child' gates, simply use 'plot'.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/addGates.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Polygon Gates — addGates","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/applyBandpass.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Bandpass Filter to Fluorescence Intensities — applyBandpass","title":"Apply Bandpass Filter to Fluorescence Intensities — applyBandpass","text":"Apply bandpass like filter fluorescence intensities within single gate.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/applyBandpass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Bandpass Filter to Fluorescence Intensities — applyBandpass","text":"","code":"applyBandpass(fdmat, bandpass, gate = 1)"},{"path":"https://bpollner.github.io/flowdex/reference/applyBandpass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Bandpass Filter to Fluorescence Intensities — applyBandpass","text":"fdmat object class-fdmat produced makefdmat. bandpass Numeric vector length two, holding lower upper boundaries bandpass filter. gate Numeric character length one, defining gate bandpass applied. Defaults 1. (See 'fdmat@metadata' possible values gate name resp. number.)","code":""},{"path":"https://bpollner.github.io/flowdex/reference/applyBandpass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Bandpass Filter to Fluorescence Intensities — applyBandpass","text":"object class 'fdmat' provided argument 'fdmat', modified range fluorescence intensities gate specified 'gate'.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/applyBandpass.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Bandpass Filter to Fluorescence Intensities — applyBandpass","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/checkRepairFcsFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and Repair FCS Files — checkRepairFcsFiles","title":"Check and Repair FCS Files — checkRepairFcsFiles","text":"Check fcs files specified folder non-unique keywords. Multiple entries keywords removed, file written back disc. original (\"corrupt\") fcs file overwritten.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/checkRepairFcsFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and Repair FCS Files — checkRepairFcsFiles","text":"","code":"checkRepairFcsFiles(   fn = \".\",   fcsRepair = FALSE,   confirm = TRUE,   showMultiples = FALSE,   keepLast = TRUE,   verbose = TRUE )"},{"path":"https://bpollner.github.io/flowdex/reference/checkRepairFcsFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and Repair FCS Files — checkRepairFcsFiles","text":"fn Character length one. name folder FCS files read . left default '.', folder name defined settings file (key: 'foN_fcsFiles') used. fcsRepair Logical. defect fcs files attempted repair. left default FALSE, fcs files double entries keywords listed. set TRUE, keyword doublets deleted fcs file saved disc. original fcs file overwritten. confirm Logical. confirmation required overwriting faulty fcs files corrected version. Defaults TRUE. set FALSE. original fcs files overwritten without warning. showMultiples Logical, multiplied keywords displayed. Defaults FALSE. keepLast Logical Numeric. last first item keyword multiplication kept. left default TRUE, last keyword keyword multiplication kept, set FALSE first kept. Provide numeric length one denote number multiplied keyword keep. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/checkRepairFcsFiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and Repair FCS Files — checkRepairFcsFiles","text":"(Invisible) TRUE. used side effect, .e. repair fcs files multiplied keywords write fcs files disc.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/checkRepairFcsFiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and Repair FCS Files — checkRepairFcsFiles","text":"reading resp. working fcs files can happen following error message displayed: \"HEADER TEXT segment define different starting point ... read data\"  testing, author came conclusion solution error can delete multiple entries keyword keywords fcs file. (fcs files ** displaying error seem unique keywords.) also appeared always last multiplied entries correct one, hence default keeping *last* multiple entries.  Currently, uniformly multiplied keyword entries get remedied -- mixture keyword-multiplication (e.g. two-fold, others three-fold) error message displayed.  approaches problem via e.g. ignoring text offset possible load_cytoframe_from_fcs resulted data loss.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/checkRepairFcsFiles.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check and Repair FCS Files — checkRepairFcsFiles","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/class-GatingSet_fd.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'GatingSet_fd' — class-GatingSet_fd","title":"Class 'GatingSet_fd' — class-GatingSet_fd","text":"extending class GatingSet.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/class-GatingSet_fd.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class 'GatingSet_fd' — class-GatingSet_fd","text":".Data object class GatingSet gateStrat object  class-gatingStrategy_fd","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/class-cyTags.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'cyTags' — class-cyTags","title":"Class 'cyTags' — class-cyTags","text":"Contains data frame holding cyTags, .e. class numerical variables possibly extracted structured sample ID sample.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/class-cyTags.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class 'cyTags' — class-cyTags","text":".Data data frame containing cyTags","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/class-eventsPV.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'eventsPV' — class-eventsPV","title":"Class 'eventsPV' — class-eventsPV","text":"Contains data frame holding overall events per volume unit.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/class-eventsPV.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class 'eventsPV' — class-eventsPV","text":".Data data frame holding overall events per volume unit. gateName Character. name corresponding gate, volumeUnit character string denoting volume unit.  volume unit , end, defined volume factor provided flowdex.settings.R file (key: 'dV_volumeFactor')","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/class-fdmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'fdmat' — class-fdmat","title":"Class 'fdmat' — class-fdmat","text":"Contains list, within list element object class 'fdmat_single', holding turn fluorescence distributions. gate gating strategy 'keepData' set TRUE one list element 'fdmat'.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/class-fdmat.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class 'fdmat' — class-fdmat","text":".Data list length gates, .e. length rows data frame slot metadata. metadata data frame holding metadata, .e. parameters used calculate fluorescense intensities. parameters can set file 'flowdex_settings.R'. cyTags object class-cyTags gateStrat object class-gatingStrategy_fd pData data frame holding pheno-data, .e. data showing raw sample-ID volume data stored single fcs file. note Character. Displaying comments like e.g. applyBandpass applied data gate.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/class-fdmat_single.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'fdmat_single' — class-fdmat_single","title":"Class 'fdmat_single' — class-fdmat_single","text":"Contains matrix fluorescence distribution data coming single gate.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/class-fdmat_single.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class 'fdmat_single' — class-fdmat_single","text":".Data matrix containing fluorescence distributions eventsPerVol object class-eventsPV gateName Character. name gate data used calculate fluorescence distributions came . metadata data frame holding metadata, .e. parameters used calculate fluorescense intensities. parameters can set file 'flowdex_settings.R'. ncpwl Numeric. number characters actual fluorescence intensities column names matrix .Data. note Character. Displaying comments like e.g. applyBandpass applied data.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/class-gatingStrategy_fd.html","id":null,"dir":"Reference","previous_headings":"","what":"Class 'gatingStrategy_fd' — class-gatingStrategy_fd","title":"Class 'gatingStrategy_fd' — class-gatingStrategy_fd","text":"Contains data frame gating strategy.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/class-gatingStrategy_fd.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Class 'gatingStrategy_fd' — class-gatingStrategy_fd","text":".Data data frame containing gating strategy defined gating strategy file. filename filename gating strategy file.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/cutFdmatToGate.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut 'fdmat' Object to Gate — cutFdmatToGate","title":"Cut 'fdmat' Object to Gate — cutFdmatToGate","text":"Cut object class `fdmat` single gate","code":""},{"path":"https://bpollner.github.io/flowdex/reference/cutFdmatToGate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut 'fdmat' Object to Gate — cutFdmatToGate","text":"","code":"cutFdmatToGate(fdmat, gate = NULL)"},{"path":"https://bpollner.github.io/flowdex/reference/cutFdmatToGate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut 'fdmat' Object to Gate — cutFdmatToGate","text":"fdmat object class-fdmat produced makefdmat. gate Numeric Character length one. designator gate keep, defined gating strategy (gates 'keepData' set TRUE.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/cutFdmatToGate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cut 'fdmat' Object to Gate — cutFdmatToGate","text":"object class-fdmat containing data gate specified gate.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/cutFdmatToGate.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut 'fdmat' Object to Gate — cutFdmatToGate","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/drawGate.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually Draw Polygon Gate — drawGate","title":"Manually Draw Polygon Gate — drawGate","text":"Produce simple x~y dotplot specified channels used locator define gate boundaries, similar defining polygon gate standard FCM GUIs. resulting data saved R-object name specified pggId. Press 'esc' done drawing gate.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/drawGate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually Draw Polygon Gate — drawGate","text":"","code":"drawGate(   gs,   flf = NULL,   gn = \"root\",   pggId = \".\",   channels = \".\",   foN.gateStrat = \".\",   useLoc = TRUE,   locN = 512,   bnd = \".\",   showGate = NULL )"},{"path":"https://bpollner.github.io/flowdex/reference/drawGate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually Draw Polygon Gate — drawGate","text":"gs gating set produced makeGatingSet makeAddGatingSet. flf Character numeric length one. identifier flowFrame within gating set gate drawn . Optimally, flowFrame, .e. sample, good representation desired population. Possible input values can determined via 'show'. gn Character length one. name gate specifying desired subset data; defaults \"root\". pggId Character length one. name resulting file containing boundaries gate. left default '.', name defined settings file (key: 'fiN_gate') used. channels Character length two. channels gate defined . left default '.', two channels defined settings file (key: 'dV_channelsForPGG') used. Available channels can viewed via 'show' - see examples. foN.gateStrat Character length one. name folder file defining gating strategy gate definitions reside. left default '.', name defined settings file (key: 'foN_gating') used. useLoc Logical. , plotting, locator used. Defaults TRUE. locN Numeric length one. many points acquire locator. Defaults 512; use \"ESC\" abort locator action. bnd NULL numeric length four. boundaries marked plot, format: (x1, x2, y1, y2). values provided, two straight lines x-axis two y-axis drawn. showGate Character length one. name already existing gate residing folder specified 'foN.gateDefs'. provided, gate additionally drawn dotplot. can helpful e.g. old, sub-optimal gate replaced new one: case name 'old' provided 'showGate' name specified 'ppgId'. Thus, old gate replaced new one.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/drawGate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually Draw Polygon Gate — drawGate","text":"list locator coordinates. Mainly called side effect, .e. locator matrix data saved R-object folder specified 'foN.gateStrat'.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/drawGate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Manually Draw Polygon Gate — drawGate","text":"generated R-object saved automatically can used gate-definition gating strategy. lines drawn locator points clicked, recommended use function within R-Studio. sample names within gating set can obtained via 'show' - see examples.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/drawGate.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Manually Draw Polygon Gate — drawGate","text":"Existing locator matrix files name overwritten without asking!","code":""},{"path":"https://bpollner.github.io/flowdex/reference/drawGate.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually Draw Polygon Gate — drawGate","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/exportFdmatData.html","id":null,"dir":"Reference","previous_headings":"","what":"Export Fluorescence Distributions — exportFdmatData","title":"Export Fluorescence Distributions — exportFdmatData","text":"Export fluorescence distributions contained 'fdmat' object file.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/exportFdmatData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export Fluorescence Distributions — exportFdmatData","text":"","code":"exportFdmatData(   fdmat,   expo.gate = \".\",   expo.name = \".\",   expo.type = \".\",   expo.folder = \".\",   verbose = \".\" )"},{"path":"https://bpollner.github.io/flowdex/reference/exportFdmatData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export Fluorescence Distributions — exportFdmatData","text":"fdmat object class-fdmat produced makefdmat. expo.gate gate export. NULL numeric character length one. Set NULL export data gates defined gating strategy 'keepData' set TRUE. Provide character length one gate name number gate defined gating strategy export data gate . left default '.', value defined settings file (key 'dE_exportGate') used. expo.name Character length one. name file holding exported fluorescence distribution(s). left default '.', value defined settings file (key 'fiN_dataExport') used. expo.type Character length one. filetype data export. Possible values 'csv' 'xlsx'.  left default '.', value defined settings file (key 'dE_exportType') used. expo.folder Character length one. name folder exported reside. left default '.', value defined settings file (key 'foN_rawData') used. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/exportFdmatData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export Fluorescence Distributions — exportFdmatData","text":"Invisible NULL; used side effects, .e. export data contained 'fdmat' file.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/exportFdmatData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Export Fluorescence Distributions — exportFdmatData","text":"data exported xlsx, additional data like metadata describing parameters lead calculation fluorescence distribution, cyTags gating strategy saved extra sheet well. exporting csv, fluorescence data one single gate can exported.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/exportFdmatData.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export Fluorescence Distributions — exportFdmatData","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/fd_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Fluorescence Distribution 'fdmat' Object — fd_load","title":"Load Fluorescence Distribution 'fdmat' Object — fd_load","text":"Load R-object containing fluorescence distributions ('fdmat' object) standard data export / rawdata folder.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Fluorescence Distribution 'fdmat' Object — fd_load","text":"","code":"fd_load(fn = NULL, expo.folder = \".\", verbose = \".\")"},{"path":"https://bpollner.github.io/flowdex/reference/fd_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Fluorescence Distribution 'fdmat' Object — fd_load","text":"fn Character length one, name file. expo.folder name folder file looked . left default '.', value defined settings file (key 'foN_rawData') used. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Fluorescence Distribution 'fdmat' Object — fd_load","text":"object class-fdmat  produced makefdmat flowdexit.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_load.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Fluorescence Distribution 'fdmat' Object — fd_load","text":"'fn' left NULL, file containing default name exported data gating strategy attempted load.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_load.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Fluorescence Distribution 'fdmat' Object — fd_load","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/fd_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Fluorescence Distribution 'fdmat' Object — fd_save","title":"Save Fluorescence Distribution 'fdmat' Object — fd_save","text":"Saves R-object containing fluorescence distributions ('fdmat' object) standard data export / rawdata folder.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Fluorescence Distribution 'fdmat' Object — fd_save","text":"","code":"fd_save(fdmat, fns = NULL, expo.folder = \".\", verbose = \".\")"},{"path":"https://bpollner.github.io/flowdex/reference/fd_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Fluorescence Distribution 'fdmat' Object — fd_save","text":"fdmat object class-fdmat produced makefdmat. fns Character length one NULL. Possible character added filename. expo.folder Character length one. name folder exported reside. left default '.', value defined settings file (key 'foN_rawData') used. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Fluorescence Distribution 'fdmat' Object — fd_save","text":"Invisible NULL; called side effect, .e. save object class-fdmat file.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_save.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save Fluorescence Distribution 'fdmat' Object — fd_save","text":"name saved file put together using default name data exports (settings.R file key 'fiN_dataExport'), name type gating strategy, character 'fdmatObj' possible filename suffix defined 'fns'.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_save.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Fluorescence Distribution 'fdmat' Object — fd_save","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/fd_updateSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Manually Update the Settings — fd_updateSettings","title":"Manually Update the Settings — fd_updateSettings","text":"Source settings-list defined settings.R file create object 'stn' environment. settings-file system based functionality package uniset.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_updateSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manually Update the Settings — fd_updateSettings","text":"","code":"fd_updateSettings(silent = FALSE)"},{"path":"https://bpollner.github.io/flowdex/reference/fd_updateSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manually Update the Settings — fd_updateSettings","text":"silent Logical","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_updateSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Manually Update the Settings — fd_updateSettings","text":"list holding key-value pairs defined 'flowdex_settings.R' file.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/fd_updateSettings.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manually Update the Settings — fd_updateSettings","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/flowdex.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","text":"Extract fluorescence distribution data bivariate distribution within previously defined flow cytometry gating set recalculate fluorescence distribution data events per volume. (meaningfully) use flowdex, FCM files contain volumetric measurement data denoting acquired sample volume.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdex.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","text":"calling flowdexit, gating set \"gs\" assigned parent envelope.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdex.html","id":"important","dir":"Reference","previous_headings":"","what":"Important","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","text":"order able correctly re-calculate raw events  events per volume unit, paramount obtain correct volume factor  manual FCM-machine / volumetric measurement module. Please see section 'Calculating Events per Volume Unit'  flowdexit details.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdex.html","id":"cave","dir":"Reference","previous_headings":"","what":"CAVE","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","text":"functions like e.g. repairVolumes, repairSID checkRepairFcsFiles can re-write fcs files disc, thereby overwriting original fcs files. therefore  recommended work copy original fcs files.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdex.html","id":"maintainer","dir":"Reference","previous_headings":"","what":"Maintainer","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","text":"Bernhard Pollner <bernhard.pollner@mac.com>","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdex.html","id":"links","dir":"Reference","previous_headings":"","what":"Links","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","text":"Please see https://bpollner.github.io/flowdex/ practical examples small tutorial; bug reports can made https://github.com/bpollner/flowdex/issues.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdex.html","id":"important-functions","dir":"Reference","previous_headings":"","what":"Important functions","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","text":"flowdexit","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdex.html","id":"acknowledgements","dir":"Reference","previous_headings":"","what":"Acknowledgements","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","text":"work made possible support IPF Austria - Georg Huber.  Flow cytometry data acquired Institute Hygiene Medical Microbiology, Medical University Innsbruck, Austria.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdex.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Fluorescence Distribution Data from FCS Files and Recalculate\nto Events per Volume — flowdex","text":"Bernhard Pollner","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdexit.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in FCS Files and Extract Data — flowdexit","title":"Read in FCS Files and Extract Data — flowdexit","text":"Read fcs files specified folder, produce gating set, add gates defined gating strategy file, extract fluorescence distribution data gate, possibly re-calculate fluorescence distribution events per volume unit, export data file save R-object holding data file well.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdexit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in FCS Files and Extract Data — flowdexit","text":"","code":"flowdexit(   fn = \".\",   patt = NULL,   gateStrat = \".\",   foN.gateStrat = \".\",   type.gateStrat = \".\",   comp = \".\",   tx = \".\",   channel = \".\",   name.dict = \".\",   foN.dict = \".\",   type.dict = \".\",   expo = TRUE,   expo.gate = \".\",   expo.name = \".\",   expo.type = \".\",   expo.folder = \".\",   fcsRepair = FALSE,   stf = TRUE,   verbose = \".\" )"},{"path":"https://bpollner.github.io/flowdex/reference/flowdexit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in FCS Files and Extract Data — flowdexit","text":"fn Character length one. name folder FCS files read . left default '.', folder name defined settings file (key: 'foN_fcsFiles') used. patt regular expression defining possible subset FCS files residing directory specified fn read . matching patterns included. gateStrat Character length one. name file defining gating strategy. left default '.', name defined settings file (key: 'fiN_gateStrat') used. foN.gateStrat Character length one. name folder file defining gating strategy gate definitions reside. left default '.', name defined settings file (key: 'foN_gating') used. type.gateStrat Character length one, can either 'csv' 'xlsx'. type file defining gating strategy. Currently, csv xlsx files supported. left default '.', filetype defined settings (key: 'dV_gateStratInputType') file used. comp Logical. compensation applied . left default '.', value defined settings file (key 'dV_comp') used. tx Character length one. transformation applied ** channels within individual flow sets. left default '.', value defined settings file (key 'dV_tx') used. (Currently 'fjbiex' implemented.) channel regular expression indicating channels, .e. columns keep original flowFrames; passed argument column.pattern read.flowSet. Set NULL read data channels. left default '.', value defined settings file (key 'dV_channel') used. name.dict Character length one. name dictionary. left default '.', value defined settings file (key 'dD_dict_name') used. foN.dict Character length one. name folder dictionary resides. left default '.', value defined settings file (key 'foN_dictionary') used. type.dict Character length one. filetype dictionary. Can one 'csv' 'xlsx'. left default '.', value defined settings file (key 'dD_dict_type') used. expo Logical, extracted data exported . expo.gate gate export. NULL numeric character length one. Set NULL export data gates defined gating strategy 'keepData' set TRUE. Provide character length one gate name number gate defined gating strategy export data gate . left default '.', value defined settings file (key 'dE_exportGate') used. expo.name Character length one. name file holding exported fluorescence distribution(s). left default '.', value defined settings file (key 'fiN_dataExport') used. expo.type Character length one. filetype data export. Possible values 'csv' 'xlsx'.  left default '.', value defined settings file (key 'dE_exportType') used. expo.folder Character length one. name folder exported reside. left default '.', value defined settings file (key 'foN_rawData') used. fcsRepair Logical. set TRUE, fcs-files folder specified argument 'fn' checked multiplied entries keywords, testing author came humble conclusion multiplied keywords can reason error message: \"HEADER TEXT segment define different starting point ... read data\".  'fcsRepair' set TRUE, except last multiplied keyword removed fcs file saved disc, overwriting original fcs file without warning.  Use function checkRepairFcsFiles offer options manually check repair afflicted fcs files. , possible display multiplied keywords select one keep. stf Logical. resulting object class 'fdmat' saved file data export folder. Defaults TRUE.  saved, name gating strategy used generate data appended filename. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdexit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in FCS Files and Extract Data — flowdexit","text":"(invisible) object class-fdmat containing list holding object class-fdmat_single list element, turn contains matrix holding fluorescence distribution single gate, overall data events per volume unit slot eventsPerVol.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdexit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in FCS Files and Extract Data — flowdexit","text":"function 'flowdexit' returns fluorescence distributions re-calculated events per volume unit, gating set produced way obtaining fluorescence distribution data gets assigned environment 'gsenv' name 'gatingSet'. Hence, can accessed via gsenv$gatingSet.  paramount obtain correct volume factor help / manual FCM-machine produce fcs files. Please see section 'Calculating Events per Volume Unit' details.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdexit.html","id":"calculating-events-per-volume-unit","dir":"Reference","previous_headings":"","what":"Calculating Events per Volume Unit","title":"Read in FCS Files and Extract Data — flowdexit","text":"calculation events per volume unit performed via following code: round((nrEvRaw / vols) * volFac , 0), nrEvRaw number (raw) events specific channel saved fcs file, vols acquired volume sample, volFac factor obtained manual FCM-machine. 'volFac' number provided manufacturer FCM-machine / volumetric measurement module. number required convert raw events back events per volume. must obtained manual FCM-machine resp. volumetric measurement module. volFac stored flowdex_settings.R file (key: 'dV_volumeFactor').","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdexit.html","id":"regarding-compensation","dir":"Reference","previous_headings":"","what":"Regarding Compensation","title":"Read in FCS Files and Extract Data — flowdexit","text":"Due circumstances developing code, never required apply kind compensation. functionality apply compensation therefore never tested verified. strongly advised use caution applying compensation. might well necessary modify source code (https://github.com/bpollner/flowdex) package order achieve correct compensation results (compensation applied function makeGatingSet).","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdexit.html","id":"exporting-data","dir":"Reference","previous_headings":"","what":"Exporting Data","title":"Read in FCS Files and Extract Data — flowdexit","text":"data exported xlsx, additional data like metadata describing parameters lead calculation fluorescence distribution, cyTags gating strategy saved extra sheet well. exporting csv, fluorescence data exported.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/flowdexit.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in FCS Files and Extract Data — flowdexit","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/genfs.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Folder Structure — genfs","title":"Generate Folder Structure — genfs","text":"Generate required folder structure, possibly copy available templates (gate definitions, gating strategy, dictionary).","code":""},{"path":"https://bpollner.github.io/flowdex/reference/genfs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Folder Structure — genfs","text":"","code":"genfs(where = getwd(), copyTemplates = TRUE)"},{"path":"https://bpollner.github.io/flowdex/reference/genfs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Folder Structure — genfs","text":"Character length one, holding valid path. Defaults current working directory. copyTemplates Logical, available templates copied folder 'templates'.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/genfs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Folder Structure — genfs","text":"return value, called side effects, .e. creation required folder structure.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/genfs.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Folder Structure — genfs","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/getEventsPerVolume.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Events per Volume Unit — getEventsPerVolume","title":"Get Events per Volume Unit — getEventsPerVolume","text":"data contained provided gating set, obtain list containing events per volume unit object class 'eventsPV' every gate every single flowFrame (.e. sample tube) list element.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/getEventsPerVolume.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Events per Volume Unit — getEventsPerVolume","text":"","code":"getEventsPerVolume(gs)"},{"path":"https://bpollner.github.io/flowdex/reference/getEventsPerVolume.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Events per Volume Unit — getEventsPerVolume","text":"gs gating set produced makeAddGatingSet.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/getEventsPerVolume.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Events per Volume Unit — getEventsPerVolume","text":"list length 'keepData == TRUE' gating strategy file, containing data frame overall events per volume unit gate list element.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/getEventsPerVolume.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Events per Volume Unit — getEventsPerVolume","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/makeAddGatingSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Gating Set and Add Gates — makeAddGatingSet","title":"Make Gating Set and Add Gates — makeAddGatingSet","text":"Read FCS files, put together gating set apply gating strategy previously defined.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makeAddGatingSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Gating Set and Add Gates — makeAddGatingSet","text":"","code":"makeAddGatingSet(   patt = NULL,   fn = \".\",   gateStrat = \".\",   foN.gateStrat = \".\",   type.gateStrat = \".\",   comp = \".\",   tx = \".\",   channel = \".\",   fcsRepair = FALSE,   verbose = \".\" )"},{"path":"https://bpollner.github.io/flowdex/reference/makeAddGatingSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Gating Set and Add Gates — makeAddGatingSet","text":"patt regular expression defining possible subset FCS files residing directory specified fn read . matching patterns included. fn Character length one. name folder FCS files read . left default '.', folder name defined settings file (key: 'foN_fcsFiles') used. gateStrat Character length one. name file defining gating strategy. left default '.', name defined settings file (key: 'fiN_gateStrat') used. foN.gateStrat Character length one. name folder file defining gating strategy gate definitions reside. left default '.', name defined settings file (key: 'foN_gating') used. type.gateStrat Character length one, can either 'csv' 'xlsx'. type file defining gating strategy. Currently, csv xlsx files supported. left default '.', filetype defined settings (key: 'dV_gateStratInputType') file used. comp Logical. compensation applied . left default '.', value defined settings file (key 'dV_comp') used. tx Character length one. transformation applied ** channels within individual flow sets. left default '.', value defined settings file (key 'dV_tx') used. (Currently 'fjbiex' implemented.) channel regular expression indicating channels, .e. columns keep original flowFrames; passed argument column.pattern read.flowSet. Set NULL read data channels. left default '.', value defined settings file (key 'dV_channel') used. fcsRepair Logical. set TRUE, fcs-files folder specified argument 'fn' checked multiplied entries keywords, testing author came humble conclusion multiplied keywords can reason error message: \"HEADER TEXT segment define different starting point ... read data\".  'fcsRepair' set TRUE, except last multiplied keyword removed fcs file saved disc, overwriting original fcs file without warning.  Use function checkRepairFcsFiles offer options manually check repair afflicted fcs files. , possible display multiplied keywords select one keep. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makeAddGatingSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Gating Set and Add Gates — makeAddGatingSet","text":"object class-GatingSet_fd added recomputed gates.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makeAddGatingSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make Gating Set and Add Gates — makeAddGatingSet","text":"convenience wrapper two functions makeGatingSet addGates.  order see schematic representation 'parent' 'child' gates, simply use 'plot'.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makeAddGatingSet.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Gating Set and Add Gates — makeAddGatingSet","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/makeGatingSet.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Gating Set — makeGatingSet","title":"Make Gating Set — makeGatingSet","text":"Read FCS files put together gating set.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makeGatingSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Gating Set — makeGatingSet","text":"","code":"makeGatingSet(   patt = NULL,   comp = \".\",   fn = \".\",   tx = \".\",   channel = \".\",   fcsRepair = FALSE,   verbose = \".\" )"},{"path":"https://bpollner.github.io/flowdex/reference/makeGatingSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Gating Set — makeGatingSet","text":"patt regular expression defining possible subset FCS files residing directory specified fn read . matching patterns included. comp Logical. compensation applied . left default '.', value defined settings file (key 'dV_comp') used. fn Character length one. name folder FCS files read . left default '.', folder name defined settings file (key: 'foN_fcsFiles') used. tx Character length one. transformation applied ** channels within individual flow sets. left default '.', value defined settings file (key 'dV_tx') used. (Currently 'fjbiex' implemented.) channel regular expression indicating channels, .e. columns keep original flowFrames; passed argument column.pattern read.flowSet. Set NULL read data channels. left default '.', value defined settings file (key 'dV_channel') used. fcsRepair Logical. set TRUE, fcs-files folder specified argument 'fn' checked multiplied entries keywords, testing author came humble conclusion multiplied keywords can reason error message: \"HEADER TEXT segment define different starting point ... read data\".  'fcsRepair' set TRUE, except last multiplied keyword removed fcs file saved disc, overwriting original fcs file without warning.  Use function checkRepairFcsFiles offer options manually check repair afflicted fcs files. , possible display multiplied keywords select one keep. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makeGatingSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Gating Set — makeGatingSet","text":"gating set produced GatingSet.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makeGatingSet.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make Gating Set — makeGatingSet","text":"folder name specified, FCS files read default FCS-files folder.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makeGatingSet.html","id":"regarding-compensation","dir":"Reference","previous_headings":"","what":"Regarding Compensation","title":"Make Gating Set — makeGatingSet","text":"Due circumstances developing code, never required apply kind compensation. functionality apply compensation therefore never tested verified. strongly advised use caution applying compensation. might well necessary modify source code function (fork https://github.com/bpollner/flowdex) order achieve correct compensation results.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makeGatingSet.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Gating Set — makeGatingSet","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/makefdmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Fluorescence Distribution Matrix — makefdmat","title":"Extract Fluorescence Distribution Matrix — makefdmat","text":"Extract fluorescence distribution along specified channel gating set defined gating strategy file re-calculate data events per volume.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makefdmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Fluorescence Distribution Matrix — makefdmat","text":"","code":"makefdmat(   gs,   name.dict = \".\",   foN.dict = \".\",   type.dict = \".\",   expo = TRUE,   expo.gate = \".\",   expo.name = \".\",   expo.type = \".\",   expo.folder = \".\",   verbose = \".\",   dev = FALSE )"},{"path":"https://bpollner.github.io/flowdex/reference/makefdmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Fluorescence Distribution Matrix — makefdmat","text":"gs gating set produced makeAddGatingSet. name.dict Character length one. name dictionary. left default '.', value defined settings file (key 'dD_dict_name') used. foN.dict Character length one. name folder dictionary resides. left default '.', value defined settings file (key 'foN_dictionary') used. type.dict Character length one. filetype dictionary. Can one 'csv' 'xlsx'. left default '.', value defined settings file (key 'dD_dict_type') used. expo Logical, extracted data exported . expo.gate gate export. NULL numeric character length one. Set NULL export data gates defined gating strategy 'keepData' set TRUE. Provide character length one gate name number gate defined gating strategy export data gate . left default '.', value defined settings file (key 'dE_exportGate') used. expo.name Character length one. name file holding exported fluorescence distribution(s). left default '.', value defined settings file (key 'fiN_dataExport') used. expo.type Character length one. filetype data export. Possible values 'csv' 'xlsx'.  left default '.', value defined settings file (key 'dE_exportType') used. expo.folder Character length one. name folder exported reside. left default '.', value defined settings file (key 'foN_rawData') used. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used. dev Logical. set true, histogram showing bins smoothed mid-points plotted. (intended development.) Defaults FALSE.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makefdmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Fluorescence Distribution Matrix — makefdmat","text":"object class-fdmat containing list holding object class-fdmat_single list element, turn contains matrix holding fluorescence distribution single gate, overall data events per volume unit slot eventsPerVol.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/makefdmat.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Fluorescence Distribution Matrix — makefdmat","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/plotFlscDist.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Fluorescence Distribution — plotFlscDist","title":"Plot Fluorescence Distribution — plotFlscDist","text":"Plot fluorescence distribution contained object class 'fdmat'. gate contained 'fdmat', graphic produced.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/plotFlscDist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Fluorescence Distribution — plotFlscDist","text":"","code":"plotFlscDist(   fdmat,   gate = NULL,   ti = \"\",   spl = NULL,   ylog = FALSE,   ccol = NULL,   clt = NULL,   toPdf = TRUE,   fns = NULL,   foN.plots = \".\",   ... )"},{"path":"https://bpollner.github.io/flowdex/reference/plotFlscDist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Fluorescence Distribution — plotFlscDist","text":"fdmat object class \"fdmat\" produced makefdmat flowdexit . gate Character numeric length one. one gate present provided fdmatrix, provide either name gate, numeric specifying position gate metadata within fdmatrix plot data gate. left default NULL one gate present data, fluorescence distributions gates plotted individual plots. ti Character length one. used title plot. spl column name cyTags values used splitting. Defaults NULL, .e. splitting. ylog Logical. y-axis (counts) plotted log scale. ccol optional color vector custom coloring. Must length number rows matrix. clt Numeric vector specifying sequence custom line-types. toPdf Logical. output saved results PDF. Defaults TRUE. fns Character length one. filename suffix, defaults NULL. foN.plots Character length one. name folder possible PDFs saved . left default '.', value defined settings file (key 'foN_plots') used. ... Additional plotting parameters passed 'matplot'","code":""},{"path":"https://bpollner.github.io/flowdex/reference/plotFlscDist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Fluorescence Distribution — plotFlscDist","text":"(Invisible) NULL; used side effects, .e. plot fluorescence distributions.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/plotFlscDist.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot Fluorescence Distribution — plotFlscDist","text":"function merely intended give first overview data resp. fluorescence distribution. purpose provide ample sufficient data visualisation.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/plotFlscDist.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Fluorescence Distribution — plotFlscDist","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/plotgates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Gates on All flowFrames in a Gating Set — plotgates","title":"Plot Gates on All flowFrames in a Gating Set — plotgates","text":"Plot available gates flowFrames gating set add layers number events. (raw format, .e. ** re-calculated volume!)","code":""},{"path":"https://bpollner.github.io/flowdex/reference/plotgates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Gates on All flowFrames in a Gating Set — plotgates","text":"","code":"plotgates(   gs,   ti = \"\",   spl = NULL,   fns = NULL,   plotAll = FALSE,   toPdf = TRUE,   x = NULL,   y = NULL,   name.dict = \".\",   foN.dict = \".\",   type.dict = \".\",   foN.plots = \".\" )"},{"path":"https://bpollner.github.io/flowdex/reference/plotgates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Gates on All flowFrames in a Gating Set — plotgates","text":"gs gating set. ti Character length one, possible character added title gate-plot. spl Character length one. name column cyTags used split plotting. left default NULL, splitting performed. Possible values 'spl' column names cyTags saved object class 'fdmat' produced makefdmat. fns Character length one. filename suffix possible pdf. plotAll Logical. left default FALSE, gates parameter keepData gating strategy set TRUE plotted. set TRUE, gates within gating strategy file plotted. toPdf Logical. plots saved pdf. Defaults TRUE x Character length one. name channel data acquired displayed x-axis. applies gating set without applied gate provided argument gs. y Character length one. name channel data acquired displayed y-axis. applies gating set without applied gate provided argument gs. name.dict Character length one. name dictionary. left default '.', value defined settings file (key 'dD_dict_name') used. foN.dict Character length one. name folder dictionary resides. left default '.', value defined settings file (key 'foN_dictionary') used. type.dict Character length one. filetype dictionary. Can one 'csv' 'xlsx'. left default '.', value defined settings file (key 'dD_dict_type') used. foN.plots Character length one. name folder possible PDFs saved . left default '.', value defined settings file (key 'foN_plots') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/plotgates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Gates on All flowFrames in a Gating Set — plotgates","text":"(Invisible) NULL. used side effect, .e. plot gated data resp. visualize gating strategy.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/plotgates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Gates on All flowFrames in a Gating Set — plotgates","text":"Plotting performed function ggcyto. gating set without applied gates provided first argument, parameters plotAll, spl toPdf apply.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/plotgates.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Gates on All flowFrames in a Gating Set — plotgates","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/repairSID.html","id":null,"dir":"Reference","previous_headings":"","what":"Repair a Single Sample ID — repairSID","title":"Repair a Single Sample ID — repairSID","text":"Replace faulty sample ID new one write single fcs file back disc.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/repairSID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repair a Single Sample ID — repairSID","text":"","code":"repairSID(   fs = NULL,   name = NULL,   newSID = NULL,   patt = NULL,   fn = \".\",   confirm = TRUE,   fcsRepair = FALSE )"},{"path":"https://bpollner.github.io/flowdex/reference/repairSID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repair a Single Sample ID — repairSID","text":"fs object returned function parameter fs left default NULL, can used input parameter fs. name Character length one. name fcs file within flowSet get new sample ID. newSID Character length one. new Sample ID. patt regular expression defining possible subset FCS files residing directory specified fn read . matching patterns included. fn Character length one. name folder FCS files read . left default '.', folder name defined settings file (key: 'foN_fcsFiles') used. confirm Logical. user asked additional confirmation rewriting fcs file performed. Defaults TRUE. fcsRepair Logical. set TRUE, fcs-files folder specified argument 'fn' checked multiplied entries keywords, testing author came humble conclusion multiplied keywords can reason error message: \"HEADER TEXT segment define different starting point ... read data\".  'fcsRepair' set TRUE, except last multiplied keyword removed fcs file saved disc, overwriting original fcs file without warning.  Use function checkRepairFcsFiles offer options manually check repair afflicted fcs files. , possible display multiplied keywords select one keep.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/repairSID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repair a Single Sample ID — repairSID","text":"(Invisible) NULL. called side effects: specified single fcs file gets written disc new sample ID.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/repairSID.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Repair a Single Sample ID — repairSID","text":"first obtain flowSet, leave parameter `fs`default NULL. providing pattern `patt`, subgroups fcs files can read . Provide obtained flowSet parameter `fs`, specify name new sample ID order re-write specified file new Sample ID. 'object@phenoData@data' can used inspect verify names FCS files sample IDs therein -- see examples.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/repairSID.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Repair a Single Sample ID — repairSID","text":"correct sample ID importance using 'dictionary' expand abbreviations sample ID - see https://bpollner.github.io/flowdex/articles/acquire_data.html.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/repairSID.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repair a Single Sample ID — repairSID","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/repairVolumes.html","id":null,"dir":"Reference","previous_headings":"","what":"Repair Volume Values in FCS Files — repairVolumes","title":"Repair Volume Values in FCS Files — repairVolumes","text":"Read subset FCS files, replace missing volume values description single flowFrames provided default value write FCS-files back disc. Original fcs get overwritten.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/repairVolumes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repair Volume Values in FCS Files — repairVolumes","text":"","code":"repairVolumes(   patt = NULL,   vol = NULL,   fn = \".\",   includeAll = FALSE,   confirm = TRUE,   fcsRepair = FALSE,   verbose = TRUE )"},{"path":"https://bpollner.github.io/flowdex/reference/repairVolumes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repair Volume Values in FCS Files — repairVolumes","text":"patt regular expression defining possible subset FCS files residing directory specified fn read . matching patterns included. vol Numeric length one. value written $VOL slot description single flowFrame. fn Character length one. name folder FCS files read . left default '.', folder name defined settings file (key: 'foN_fcsFiles') used. includeAll Logical. left default FALSE, FCS files *missing* volume information read value provided vol assigned . changed TRUE, also FCS files *present* volume information read value provided vol assigned . confirm Logical. user asked additional confirmation rewriting fcs files performed. Defaults TRUE. fcsRepair Logical. set TRUE, fcs-files folder specified argument 'fn' checked multiplied entries keywords, testing author came humble conclusion multiplied keywords can reason error message: \"HEADER TEXT segment define different starting point ... read data\".  'fcsRepair' set TRUE, except last multiplied keyword removed fcs file saved disc, overwriting original fcs file without warning.  Use function checkRepairFcsFiles offer options manually check repair afflicted fcs files. , possible display multiplied keywords select one keep. verbose Logical. status messages displayed. left default '.', value defined settings file (key 'dV_verbose') used.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/repairVolumes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repair Volume Values in FCS Files — repairVolumes","text":"(Invisible) NULL. used side effects, .e. repair fcs files missing volume data write disc, thereby overwriting original fcs files.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/repairVolumes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Repair Volume Values in FCS Files — repairVolumes","text":"function intended used , known unknown reasons, volume information encoded original fcs file.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/repairVolumes.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repair Volume Values in FCS Files — repairVolumes","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/reference/setupSettings.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Settings Setup — setupSettings","title":"Perform Settings Setup — setupSettings","text":"Perform setup setting-system provided package 'uniset'.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/setupSettings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Settings Setup — setupSettings","text":"","code":"setupSettings(path = NULL)"},{"path":"https://bpollner.github.io/flowdex/reference/setupSettings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Settings Setup — setupSettings","text":"path Character length one, holding path location folder containing settings.R file located. Defaults 'NULL'. left default 'NULL', location selectable interactively.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/setupSettings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Settings Setup — setupSettings","text":"(Invisible) NULL; called side effects, .e. set settings-file system provided package 'uniset'.","code":""},{"path":"https://bpollner.github.io/flowdex/reference/setupSettings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform Settings Setup — setupSettings","text":"done .","code":""},{"path":"https://bpollner.github.io/flowdex/reference/setupSettings.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform Settings Setup — setupSettings","text":"Please refer https://bpollner.github.io/flowdex/ executable  examples tutorial dataset.","code":""},{"path":[]},{"path":"https://bpollner.github.io/flowdex/news/index.html","id":"flowdex-041","dir":"Changelog","previous_headings":"","what":"flowdex 0.4.1","title":"flowdex 0.4.1","text":"Initial submission CRAN March 2022","code":""}]
