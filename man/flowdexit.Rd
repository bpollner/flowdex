% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen-functions.R
\name{flowdexit}
\alias{flowdexit}
\title{Read in FCS Files and Extract Data}
\usage{
flowdexit(
  fn = ".",
  patt = NULL,
  gateStrat = ".",
  foN.gateStrat = ".",
  type.gateStrat = ".",
  comp = ".",
  tx = ".",
  channel = ".",
  name.dict = ".",
  foN.dict = ".",
  type.dict = ".",
  expo = TRUE,
  expo.gate = ".",
  expo.name = ".",
  expo.type = ".",
  expo.folder = ".",
  ignore.text.offset = FALSE,
  stf = TRUE,
  verbose = "."
)
}
\arguments{
\item{fn}{Character length one. The name of the folder where FCS files should 
be read from. If left at the default '.', the folder name as defined in the 
settings file (key: 'foN_fcsFiles') will be used.}

\item{patt}{A regular expression defining a possible subset of FCS files
residing in the directory specified by \code{fn} to read in. Only matching
patterns will be included.}

\item{gateStrat}{Character length one. The name of the file defining the 
gating strategy. If left at the default '.', the name as defined in the 
settings file (key: 'fiN_gateStrat') will be used.}

\item{foN.gateStrat}{Character length one. The name of the folder where the 
file defining the gating strategy and the gate definitions reside. If left 
at the default '.', the name as defined in the settings file 
(key: 'foN_gating') will be used.}

\item{type.gateStrat}{Character length one, can be either 'csv' or 'xlsx'. 
files are supported. If left at the default '.', the filetype as defined in 
the settings (key: 'dV_gateStratInputType') file will be used.}

\item{comp}{Logical. If compensation should be applied or not. If left at 
the default '.', the value as defined in the settings file (key 'dV_comp') 
will be used.}

\item{tx}{Character length one. The transformation applied to *all* channels 
within the individual flow sets. If left at the default '.', the value as 
defined in the settings file (key 'dV_tx') will be used. (Currently only 
'fjbiex' is implemented.)}

\item{channel}{A regular expression indicating which channels, i.e. which
columns to keep from the original flowframes; is passed down to argument
\code{column.pattern} of \code{\link[flowCore]{read.flowSet}}. Set to NULL
to read data from all channels. If left at the default '.', the value as 
defined in the settings file (key 'dV_channel') will be used.}

\item{name.dict}{Character length one. The name of the dictionary. If left 
at the default '.', the value as defined in the settings file (key 
'dD_dict_name') will be used.}

\item{foN.dict}{Character length one. The name of the folder where the 
dictionary resides. If left at the default '.', the value as defined in the 
settings file (key 'foN_dictionary') will be used.}

\item{type.dict}{Character length one. The filetype of the dictionary. Can 
be one of 'csv' or 'xlsx'. If left at the default '.', the value as defined 
in the settings file (key 'dD_dict_type') will be used.}

\item{expo}{Logical, if extracted data should exported at all.}

\item{expo.gate}{Which gate to export. NULL or numeric or character length 
one. Set to NULL to export data from all those gates defined in the gating 
strategy where 'keeoData' is set to TRUE. Provide a character length one 
with a gate name or the number of that gate as defined in the gating strategy 
to export data from this gate only. If left at the default '.', the value as 
defined in the settings file (key 'dE_exportGate') will be used.}

\item{expo.name}{Character length one. The name of the file holding the 
exported fluorescence distribution(s). If left at the default '.', the value 
as defined in the settings file (key 'fiN_dataExport') will be used.}

\item{expo.type}{Character length one. The filetype of the data export. 
Possible values are 'csv' and 'xlsx'.  If left at the default '.', the value 
as defined in the settings file (key 'dE_exportType') will be used.}

\item{expo.folder}{Character length one. The name of the folder where exported 
should reside. If left at the default '.', the value as defined in the 
settings file (key 'foN_rawData') will be used.}

\item{ignore.text.offset}{Logical. If set to true, fcs-files in the folder 
specified at argument 'fn' will be checked for inconsistencies in the 
HEADER and TEXT segment and, if those inconsistency is present, the 
afflicted fcs-file will be re-written to disc, with the values in TEXT 
being ignored. The file will be \strong{overwritten without further warning.}}

\item{stf}{Logical. If the resulting object of class 'fdmat' should be saved 
to file in the data export folder. Defaults to TRUE.  If saved, the name 
of the gating strategy used to generate the data will be appended to the 
filename.}

\item{verbose}{Logical. If status messages should be displayed. If left at 
the default '.', the value as defined in the settings file (key 'dV_verbose') 
will be used.}
}
\value{
An object of class "fdmat" containing a list holding an object of 
class 'fdmat_single' in each list element, which in turn contains a matrix 
holding the fluorescence distribution of a single gate, possibly 
re-calculated to events per volume unit, and the overall data 
for events per volume unit in the slot 'eventsPerVol'.
}
\description{
Read in all fcs files from a specified folder, produce a 
gating set, add gates as defined in the gating strategy file, extract 
fluorescence distribution data from each gate, possibly re-calculate the 
fluorescence distribution to events per volume unit, export all data to file 
and save the R-object holding all the data to file as well.
}
\details{
While function 'flowdexit' returns fluorescence distributions 
re-calculated to events per volume unit, the gating set that was produced 
in the way of obtaining the fluorescence distribution data getas assigned 
to the environment 'gsenv' under the name 'gatingSet'. Hence, it can be 
accessed via 'gsenv$gatingSet'.
}
\section{Calculating Events per Volume Unit}{
 
XXX explain this please. 
 evml <- round((nrEvRaw / vols) * volFac , 0)
}

\section{Regarding Compensation}{
 Due to the circumstances when developing 
this code, it was never required to apply any kind of compensation. The 
functionality to apply compensation was therefore never tested or verified. 
It is strongly advised to use caution when applying compensation. It might 
well be necessary to modify the source code of this package in order to 
achieve correct compensation results (compensation is applied in the 
function \code{\link{makeGatingSet}}).
}

\section{Exporting Data}{
 If data are exported to xlsx, additional data like 
the metadata describing the parameters that lead to the calculation of 
the fluorescence distribution, the cyTags and the gating strategy are 
saved in an extra sheet as well. If exporting to csv, only the fluorescence 
data are exported.
}

